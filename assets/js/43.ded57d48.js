(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{486:function(_,t,v){"use strict";v.r(t);var e=v(10),s=Object(e.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"innodb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[_._v("#")]),_._v(" InnoDB")]),_._v(" "),v("h2",{attrs:{id:"查询慢日志"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#查询慢日志"}},[_._v("#")]),_._v(" 查询慢日志")]),_._v(" "),v("div",{staticClass:"language-mysql extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("select * from mysql.slow_log;// 保存的是没有使用索引的查询SQL\n")])])]),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[_._v("start_time")]),_._v(" "),v("th",[_._v("user_host")]),_._v(" "),v("th",[_._v("query_time")]),_._v(" "),v("th",[_._v("lock_time")]),_._v(" "),v("th",[_._v("rows_sent")]),_._v(" "),v("th",[_._v("rows_examined")]),_._v(" "),v("th",[_._v("db")]),_._v(" "),v("th",[_._v("last_insert_id")]),_._v(" "),v("th",[_._v("insert_id")]),_._v(" "),v("th",[_._v("server_id")]),_._v(" "),v("th",[_._v("sql_text")]),_._v(" "),v("th",[_._v("thread_id")])])]),_._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[_._v("2011-06-30 15:30:03.124061")]),_._v(" "),v("td",[_._v("root[root] @ [localhost]")]),_._v(" "),v("td",[_._v("00:00:03.655591")]),_._v(" "),v("td",[_._v("0:00:00")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("1206380")]),_._v(" "),v("td",[_._v("mytest")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("0")]),_._v(" "),v("td",[_._v("3324552157")]),_._v(" "),v("td",[_._v("SELECT   gc.party_id ,'GC'   , gc.goods_combination_id    , gc.combination_code                                                       , gc.status , gc.combination_name, GROUP_CONCAT(IF(gcd.item_type = 'GOODS_GROUP',concat(c.sku_id,'"),v("em",[_._v("',c.number")]),_._v("gcd.num),concat(gcd.item_id,'*',gcd.num)))    as sku_details   , gc.create_time  FROM    goods_combination gc    INNER JOIN goods_combination_detail gcd on gc.goods_combination_id = gcd.goods_combination_id and gcd.item_type in('GOODS_GROUP','GOODS')    inner join oms.party p on p.party_id=gc.party_id    inner join oms_biz_system bs on bs.biz_system=p.biz_system    LEFT JOIN goods_group_detail c on gcd.item_type  = 'GOODS_GROUP' AND gcd.item_id = c.goods_group_id AND c."),v("code",[_._v("status")]),_._v(" = 'NORMAL'    LEFT JOIN sku s on gcd.item_type = 'GOODS' AND s.sku_id =gcd.item_id AND s."),v("code",[_._v("status")]),_._v(" = 'NORMAL'  where gc.party_id = 2001454      group by gc.party_id , gc.combination_code")]),_._v(" "),v("td",[_._v("15480304")])])])]),_._v(" "),v("h2",{attrs:{id:"binlog"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#binlog"}},[_._v("#")]),_._v(" binlog")]),_._v(" "),v("p",[_._v("记录MYSQL数据库执行更改的所有操作。")]),_._v(" "),v("p",[_._v("主要有以下几种作用")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("恢复")]),_._v("。某些数据的恢复需要二进制日志，例如，在一个数据库全备文件恢复后，用户可以通过二进制日志进行"),v("code",[_._v("point-in-time")]),_._v("的恢复")]),_._v(" "),v("li",[v("strong",[_._v("复制")]),_._v("。slaver库从master复制数据。")]),_._v(" "),v("li",[v("strong",[_._v("审计")]),_._v("。可以对数据库中的信息来进行审计，判断是否有对数据库进行注入的攻击。")])]),_._v(" "),v("h2",{attrs:{id:"innodb的重要特征"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#innodb的重要特征"}},[_._v("#")]),_._v(" InnoDB的重要特征")]),_._v(" "),v("h3",{attrs:{id:"插入缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插入缓存"}},[_._v("#")]),_._v(" 插入缓存")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Insert Buffer")]),_._v(" "),v("p",[_._v("对于非主键索引的插入和更新操作，不是每一次直接插入到索引页中，而是先判断插入的辅助索引页是否在缓冲池中，若在，则直接插入；若不在，则先放入到一个"),v("code",[_._v("Insert Buffer")]),_._v("对象中，好似欺骗。数据库这个非聚集索引已经插入到叶子节点，而实际并没有，而是存放在另外一个位置。然后再以一点的频率和情况进行"),v("code",[_._v("Insert Buffer")]),_._v("和辅助索引页子节点的merge操作，这样大大提高了辅助索引插入的性能。")]),_._v(" "),v("p",[_._v("然而"),v("code",[_._v("Insert Buffer")]),_._v("的使用需要满足以下两种条件")]),_._v(" "),v("ul",[v("li",[_._v("索引是辅助索引")]),_._v(" "),v("li",[_._v("索引不是unique索引")])])]),_._v(" "),v("li",[v("p",[v("code",[_._v("Change Buffer")]),_._v("可以将其视为"),v("code",[_._v("Insert Buffer")]),_._v("的升级。"),v("code",[_._v("InnoDB")]),_._v("对索引的"),v("code",[_._v("Insert")]),_._v(","),v("code",[_._v("DELETE")]),_._v(","),v("code",[_._v("UPDATE")]),_._v("都进行缓存。")])])]),_._v(" "),v("h3",{attrs:{id:"两次写-doublewrite"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#两次写-doublewrite"}},[_._v("#")]),_._v(" 两次写（"),v("code",[_._v("doublewrite")]),_._v("）")]),_._v(" "),v("p",[_._v("为InnoDB对于数据页的读写提高可靠性。")]),_._v(" "),v("p",[_._v("在对缓冲池中的脏页进行刷新时，并不直接写磁盘，而是会通过memcpy将脏页复制到内存中的"),v("code",[_._v("doublewrite buffer")]),_._v("，之后通过"),v("code",[_._v("doublewrite buffer")]),_._v("再分两次，每次"),v("code",[_._v("1MB")]),_._v("顺序的写入共享表空间的物理磁盘上，然后马上调用调用"),v("code",[_._v("fsync")]),_._v("函数，同步磁盘，避免缓冲写带来的问题。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.clinan.xyz/mysql_doublewrite.png",alt:""}})]),_._v(" "),v("h3",{attrs:{id:"自适应hash"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自适应hash"}},[_._v("#")]),_._v(" 自适应hash")]),_._v(" "),v("p",[_._v("InnoDB存储引擎会监控对表上各索引页的查询。如果观察到建立Hash索引带来速度提升，则建立Hash索引，称之为自适应Hash索引（Adaptive Hash Index, AHI）。AHI是通过缓冲池的B+树页构造而来的。索引建立的速度很快，并不需要对整张表构建Hash索引。InnoDB存储引擎会自动根据访问的频率和模式来自动为某些"),v("strong",[_._v("热点数据")]),_._v("页建立Hash索引。")]),_._v(" "),v("h3",{attrs:{id:"异步io"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#异步io"}},[_._v("#")]),_._v(" 异步IO")]),_._v(" "),v("p",[_._v("为了提供磁盘操作性能，当前的数据库系统都采用异步IO（AIO）的方式来处理磁盘操作。InnoDB也是如此。")]),_._v(" "),v("h3",{attrs:{id:"刷新邻接页"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#刷新邻接页"}},[_._v("#")]),_._v(" 刷新邻接页")]),_._v(" "),v("p",[_._v("当刷新一个脏页时，InnoDB会检测该页所在区（extent）的所有页，如果是脏页，那么一起刷新。这样的好处，可以通过AIO将多个IO写入操作合并为一个IO操作。所以在传统的机械硬盘上有很好的优势。")]),_._v(" "),v("p",[_._v("需要考虑到下面两个问题")]),_._v(" "),v("ul",[v("li",[_._v("是不是可能将不怎么脏的页进行了写入，而该页之后又很快变脏？")]),_._v(" "),v("li",[_._v("固态硬盘有着较高的IPOS，是否还需要这个特性。")])]),_._v(" "),v("p",[_._v("为此，InnoDB存储引擎提供了参数"),v("code",[_._v("innodb_flush_neighbors")]),_._v("，用来控制是否启用该特性。对应固态硬盘，建议将此参数设置为0，即关闭此特性。")])])}),[],!1,null,null,null);t.default=s.exports}}]);