(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{447:function(t,a,s){"use strict";s.r(a);var n=s(10),e=function(t){t.options.__data__block__={mermaid_64a56f6c:"graph LR\n源代码--\x3e1.编译器优化重排序--\x3e2.指令并行的重排序--\x3e3.内存系统重排序--\x3e最终执行的指令\n",mermaid_64a568ea:"classDiagram\nAbstractQueuedSynchronizer <|--Sync\nSync<|--FailSync\nSync<|--NonfailSync\nNonfailSync o-- ReentrantLock\nFailSync o-- ReentrantLock\n\nclass AbstractQueuedSynchronizer{\n\t-volatile state\n\t+acquire() void\n\t+release() boolean\n}\n\nclass Sync{\n\t+nonfairTryAcquire(int acquires) void\n\t+tryRelease(int release) void\n}\nclass FailSync{\n\t+lock() void\n\t+tryAcquire(int acquires) void\n}\n\nclass NonfailSync{\n\t+lock() void\n\t+tryAcquire(int acquires) void\n}\nclass ReentrantLock{\n\t-Sync sync\n\t+lock() void\n\t+unlock() void\n}\n\n",mermaid_64a54a24:"graph TD\n大任务 ---|Fork| 子任务1\n大任务 ---|Fork| 子任务2\n大任务 ---|Fork| 子任务3\n子任务1 ---|Fork| 子任务1.1\n子任务1 ---|Fork| 子任务1.2\n子任务1.1 ---|Join| 任务1结果\n子任务1.2 ---|Join| 任务1结果\n子任务2 --- 任务2结果\n子任务3 ---|Fork| 子任务3.1\n子任务3 ---|Fork| 子任务3.2\n子任务3.1 ---|Join| 任务3结果\n子任务3.2 ---|Join| 任务3结果\n任务1结果 ---|Join| 大任务结果\n任务2结果 ---|Join| 大任务结果\n任务3结果 ---|Join| 大任务结果\n",mermaid_64a53bd2:"graph LR\nA[提交任务]--\x3eB{核心线程已满}--Yes--\x3eC{队列是否已满}--Yes--\x3eD{线程池是否已满}\nD--Yes--\x3eEND[按照饱和策略处理]\nB--No--\x3eE[创建线程执行任务]\nC--No--\x3eF[存入队列]\nD--No--\x3eG[创建线程执行任务]\n"}},r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"java多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java多线程"}},[t._v("#")]),t._v(" Java多线程")]),t._v(" "),s("p",[t._v("本文基于《Java并发编程的艺术》")]),t._v(" "),s("h2",{attrs:{id:"并发编程的挑战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发编程的挑战"}},[t._v("#")]),t._v(" 并发编程的挑战")]),t._v(" "),s("h2",{attrs:{id:"java并发机制的底层实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java并发机制的底层实现原理"}},[t._v("#")]),t._v(" Java并发机制的底层实现原理")]),t._v(" "),s("h3",{attrs:{id:"volatile的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile的应用"}},[t._v("#")]),t._v(" "),s("code",[t._v("volatile")]),t._v("的应用")]),t._v(" "),s("h4",{attrs:{id:"定义和实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义和实现原理"}},[t._v("#")]),t._v(" 定义和实现原理")]),t._v(" "),s("p",[s("code",[t._v("volatile")]),t._v("是如何来保证可见性的呢？让我们在X86处理器下通过工具获取JIT编译器生成的汇编指令来查看对"),s("code",[t._v("volatile")]),t._v("进行写操作时CPU会做什么事情。")]),t._v(" "),s("p",[s("code",[t._v("Java")]),t._v("代码如下。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  instance 是 volatile 变量")]),t._v("\n")])])]),s("p",[t._v("转变成汇编代码，如下。")]),t._v(" "),s("div",{staticClass:"language-assembly extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("0x01a3de1d: movb $0×0,0×1104800(%esi);0x01a3de24: lock addl $0×0,(%esp);\n")])])]),s("h4",{attrs:{id:"lock前缀的指令在多核处理器下会引发了两件事情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock前缀的指令在多核处理器下会引发了两件事情"}},[t._v("#")]),t._v(" "),s("code",[t._v("Lock")]),t._v("前缀的指令在多核处理器下会引发了两件事情")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Lock")]),t._v("前缀指令会引起处理器缓存回写到内存")]),t._v("\n这个涉及到处理器的硬件实现。和代码无关。有的是锁总线，锁总线当前线程会独占共享内存；有的是锁缓存。")]),t._v(" "),s("p",[s("strong",[t._v("一个处理器的缓存回写到内存会导致其他处理器的缓存无效")])]),t._v(" "),s("p",[s("code",[t._v("IA-32")]),t._v("处理器和"),s("code",[t._v("Intel 64")]),t._v("处理器使用 MESI（修改、独占、共享、无效）控制协议去维护内部缓存和其他处理器缓存的一致性。")]),t._v(" "),s("h3",{attrs:{id:"synchronized的实现原理和优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#synchronized的实现原理和优化"}},[t._v("#")]),t._v(" "),s("code",[t._v("synchronized")]),t._v("的实现原理和优化")]),t._v(" "),s("p",[s("code",[t._v("java")]),t._v("中的每一个对象都可以作为锁，主要有这三种")]),t._v(" "),s("ul",[s("li",[t._v("对于普通方法，锁是当前实例对象。")]),t._v(" "),s("li",[t._v("对于静态同步方法，锁是当前类的Class对象")]),t._v(" "),s("li",[t._v("对于同步块方法，锁是"),s("code",[t._v("synchronized")]),t._v("括号里的对象")])]),t._v(" "),s("h4",{attrs:{id:"将缓存数据刷回主存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将缓存数据刷回主存"}},[t._v("#")]),t._v(" 将缓存数据刷回主存")]),t._v(" "),s("p",[s("strong",[t._v("离开一个"),s("code",[t._v("synchronized")]),t._v("块会导致当前线程所有写入到缓存的数据刷新，进入一个"),s("code",[t._v("synchronized")]),t._v("块会导致所有可变数据重新从主存获取。")])]),t._v(" "),s("h4",{attrs:{id:"锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[t._v("#")]),t._v(" 锁")]),t._v(" "),s("p",[t._v("级别从低到高：无锁，偏向锁，轻量锁，重量锁。锁的状态会随着竞争情况逐渐升级。但不能降级。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("锁")]),t._v(" "),s("th",[t._v("优点")]),t._v(" "),s("th",[t._v("缺点")]),t._v(" "),s("th",[t._v("使用场景")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("偏向锁")]),t._v(" "),s("td",[t._v("加锁和解锁不需要额外的消耗，和执行非同步方法相比仅存在纳秒级别的差距")]),t._v(" "),s("td",[t._v("如果线程间存在锁竞争，会带来额外的锁撤销的消耗")]),t._v(" "),s("td",[t._v("适用于只有一个线程访问同步语块")])]),t._v(" "),s("tr",[s("td",[t._v("轻量级锁")]),t._v(" "),s("td",[t._v("竞争的线程不会阻塞，而是自旋等待。提高了程序的响应速度")]),t._v(" "),s("td",[t._v("如果始终得不到锁竞争的线程，使用自旋会消耗CPU")]),t._v(" "),s("td",[t._v("追求响应时间，同步语块执行速度非常快")])]),t._v(" "),s("tr",[s("td",[t._v("重量级锁")]),t._v(" "),s("td",[t._v("线程竞争不使用线程，不会消耗CPU")]),t._v(" "),s("td",[t._v("线程阻塞，响应时间缓慢")]),t._v(" "),s("td",[t._v("追求吞吐量，同步语块执行速度慢")])])])]),t._v(" "),s("h2",{attrs:{id:"java内存模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java内存模型"}},[t._v("#")]),t._v(" "),s("code",[t._v("Java")]),t._v("内存模型")]),t._v(" "),s("h3",{attrs:{id:"多线程通信-jmm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多线程通信-jmm"}},[t._v("#")]),t._v(" 多线程通信 JMM")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.clinan.xyz/jmm.png",alt:"jmm"}})]),t._v(" "),s("h3",{attrs:{id:"指令重排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令重排序"}},[t._v("#")]),t._v(" 指令重排序")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("编译器优化的重排序，编译器在不改变单线程程序执行语义的情况下，可以重新安排语句的执行顺序。")])]),t._v(" "),s("li",[s("p",[t._v("指令并行的重排序。指令级并行的重排序。现代处理器采用了指令级并行技术（ "),s("code",[t._v("Instruction-LevelParallelism, ILP")]),t._v("）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。")])]),t._v(" "),s("li",[s("p",[t._v("内存系统的重排序。由于处理器使用缓存和读写缓冲区，这使得加载和存储操作看上去可能是在乱序执行。")]),t._v(" "),s("Mermaid",{attrs:{id:"mermaid_64a56f6c",graph:t.$dataBlock.mermaid_64a56f6c}}),s("p",[t._v("上述的1属于编译器重排序，2和 3属于处理器重排序。这些重排序可能会导致多线程程序出现内存可见性问题。对于编译器，JMM的编译器重排序规则会禁止特定类型的编译器重排序（不是所有的编译器重排序都要禁止）。对于处理器重排序，JMM的处理器重排序规则会要求 Java编译器在生成指令序列时，插入特定类型的内存屏障"),s("code",[t._v("Memory Barriers")]),t._v("， Intel称之为 "),s("code",[t._v("Memory Fence")]),t._v("）指令，通过内存屏障指令来禁止特定类型的处理器重排序。")])],1)]),t._v(" "),s("p",[s("strong",[t._v("JMM属于语言级的内存模型")]),t._v("，它确保在不同的编译器和不同的处理器平台之上，通过禁止特定类型的编译器重排序和处理器重排序，为 程序员提供一致的内存可见性保证 。")]),t._v(" "),s("h3",{attrs:{id:"volatile的内存语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile的内存语义"}},[t._v("#")]),t._v(" "),s("code",[t._v("volatile")]),t._v("的内存语义")]),t._v(" "),s("p",[s("code",[t._v("volatile")]),t._v("变量自身具有下列特性")]),t._v(" "),s("ul",[s("li",[t._v("可见性，对一个"),s("code",[t._v("volatile")]),t._v("变量的读，总是能看到（任意线程）对这个"),s("code",[t._v("volatile")]),t._v("变量最后的写入。")]),t._v(" "),s("li",[s("s",[t._v("原子性")]),t._v(" ，对任意单个"),s("code",[t._v("volatile")]),t._v("变量的读/写具有原子性，但类似于"),s("code",[t._v("volatile++")]),t._v("这种复合操作不具有原子性。")])]),t._v(" "),s("h4",{attrs:{id:"volatile重排序规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile重排序规则"}},[t._v("#")]),t._v(" "),s("code",[t._v("volatile")]),t._v("重排序规则")]),t._v(" "),s("ul",[s("li",[t._v("当"),s("strong",[t._v("第二个")]),t._v("操作是"),s("code",[t._v("volatile")]),t._v("写的时候，不管第一个操作是什么，都不能重排序。这个规则确保"),s("code",[t._v("volatile")]),t._v("写之前的操作不会被编译器重排序到"),s("code",[t._v("volatile")]),t._v("写之后。")]),t._v(" "),s("li",[t._v("当"),s("strong",[t._v("第一个")]),t._v("操作是"),s("code",[t._v("volatile")]),t._v("读时，不管第二个操作是什么，都不能重排序。这个规则确保"),s("code",[t._v("volatile")]),t._v("读之后的操作不会被编译器重排序到"),s("code",[t._v("volatile")]),t._v("读之前。")]),t._v(" "),s("li",[t._v("第一个操作是"),s("code",[t._v("volatile")]),t._v("写，第二个操作时"),s("code",[t._v("volatile")]),t._v("读时，不能重排序。")])]),t._v(" "),s("p",[t._v("为了实现"),s("code",[t._v("volatile")]),t._v("的内存语义，编译器在生成字节码时，会在")]),t._v(" "),s("h3",{attrs:{id:"锁的内存语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁的内存语义"}},[t._v("#")]),t._v(" 锁的内存语义")]),t._v(" "),s("p",[t._v("以"),s("code",[t._v("JUC")]),t._v("包的"),s("code",[t._v("ReentrantLock")]),t._v("作为例子。")]),t._v(" "),s("Mermaid",{attrs:{id:"mermaid_64a568ea",graph:t.$dataBlock.mermaid_64a568ea}}),s("h5",{attrs:{id:"对公平锁和给公平锁的内存语义的总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对公平锁和给公平锁的内存语义的总结"}},[t._v("#")]),t._v(" 对公平锁和给公平锁的内存语义的总结")]),t._v(" "),s("ul",[s("li",[t._v("公平锁和非公平锁进行释放时，最后都要写一个"),s("code",[t._v("volatile")]),t._v("的变量"),s("code",[t._v("state")])]),t._v(" "),s("li",[t._v("公平锁获取时，首先会去读"),s("code",[t._v("volatile")]),t._v("变量"),s("code",[t._v("state")])]),t._v(" "),s("li",[t._v("非公平锁获取时，首先会用"),s("code",[t._v("CAS")]),t._v("更新"),s("code",[t._v("volatile")]),t._v("变量，这个操作同时具有"),s("code",[t._v("volatile")]),t._v("读和"),s("code",[t._v("volatile")]),t._v("写的内存语义")])]),t._v(" "),s("p",[t._v("锁释放和锁获取至少有以下两种方式")]),t._v(" "),s("ul",[s("li",[t._v("利用"),s("code",[t._v("volatile")]),t._v("变量的读-写锁具有的内存语义")]),t._v(" "),s("li",[t._v("利用"),s("code",[t._v("CAS")]),t._v("所附带的"),s("code",[t._v("volatile")]),t._v("读和"),s("code",[t._v("volatile")]),t._v("写的内存语义")])]),t._v(" "),s("h3",{attrs:{id:"final的内存语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#final的内存语义"}},[t._v("#")]),t._v(" "),s("code",[t._v("final")]),t._v("的内存语义")]),t._v(" "),s("p",[t._v("两个重排序规则")]),t._v(" "),s("ul",[s("li",[t._v("在构造函数内对一个"),s("code",[t._v("final")]),t._v("域的写入，与随后把这个构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序。")]),t._v(" "),s("li",[t._v("初次读一个包含"),s("code",[t._v("final")]),t._v("域的对象的引用，与随后初次读这个"),s("code",[t._v("final")]),t._v("域，这两个操作之间不能重排序。")])]),t._v(" "),s("p",[t._v("读"),s("code",[t._v("final")]),t._v("域的重排序规则是，在一个线程中，初次读对象引用与初次读该对象包含的"),s("code",[t._v("final")]),t._v("域，JMM禁止处理器重排序这两个操作（注意，这个规则仅仅针对处理器）。编译器会在读"),s("code",[t._v("final")]),t._v("域操作的前面插入一个"),s("code",[t._v("LoadLoad")]),t._v("屏障。")]),t._v(" "),s("h3",{attrs:{id:"happens-before"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#happens-before"}},[t._v("#")]),t._v(" happens-before")]),t._v(" "),s("p",[t._v("在JMM中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在"),s("code",[t._v("happens-befor")]),t._v("e关系。这里提到的两个操作既可以是在一个线程之内，也可以是在不同线程之间。")]),t._v(" "),s("p",[t._v("*《JSR-133:JavaMemoryModelandThreadSpecification》*定义了如下"),s("code",[t._v("happens-before")]),t._v("规则。")]),t._v(" "),s("ol",[s("li",[t._v("程序顺序规则：一个线程中的每个操作，"),s("code",[t._v("happens-before")]),t._v("于该线程中的任意后续操作。")]),t._v(" "),s("li",[t._v("监视器锁规则：对一个锁的解锁，"),s("code",[t._v("happens-before")]),t._v("于随后对这个锁的加锁。")]),t._v(" "),s("li",[s("code",[t._v("volatile")]),t._v("变量规则：对一个"),s("code",[t._v("volatile")]),t._v("域的写，"),s("code",[t._v("happens-before")]),t._v("于任意后续对这个"),s("code",[t._v("volatile")]),t._v("域的读。")]),t._v(" "),s("li",[t._v("传递性：如果"),s("code",[t._v("A happens-before B")]),t._v("，且"),s("code",[t._v("B happens-before C")]),t._v("，那么"),s("code",[t._v("A happens-before C")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("start()")]),t._v("规则：如果线程A执行操作"),s("code",[t._v("ThreadB.start()")]),t._v("（启动线程B），那么A线程的"),s("code",[t._v("ThreadB.start()")]),t._v("操作"),s("code",[t._v("happens-before")]),t._v("于线程B中的任意操作。")]),t._v(" "),s("li",[s("code",[t._v("join()")]),t._v("规则：如果线程A执行操作"),s("code",[t._v("ThreadB.join()")]),t._v("并成功返回，那么线程B中的任意操作"),s("code",[t._v("happens-before")]),t._v("于线程A从"),s("code",[t._v("ThreadB.join()")]),t._v("操作成功返回。")])]),t._v(" "),s("h3",{attrs:{id:"双重检查锁定-double-checked-locking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双重检查锁定-double-checked-locking"}},[t._v("#")]),t._v(" 双重检查锁定，double-checked locking")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// volatile 关键字保证，当uniqueInstance被实例时，多个线程能正确的获取uniqueInstance变量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" uniqueInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查实例，如果不存在就进入同步块")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uniqueInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，只有第一次才彻底执行这里的代码")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入同步块后，再次检查，如果还是null才创建。")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uniqueInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    uniqueInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" uniqueInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"延迟初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#延迟初始化"}},[t._v("#")]),t._v(" 延迟初始化")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceHolder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里将导致 InstanceHolder 类被加载并初始化")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"java并发编程基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java并发编程基础"}},[t._v("#")]),t._v(" Java并发编程基础")]),t._v(" "),s("p",[t._v("Java线程状态")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("状态名称")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("new")])]),t._v(" "),s("td",[t._v("创建完成，但是还没有执行"),s("code",[t._v("start()")]),t._v("方法")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("runnable")])]),t._v(" "),s("td",[t._v("运行中")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("blocked")])]),t._v(" "),s("td",[t._v("堵塞，标识线程被锁堵塞着")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("waiting")])]),t._v(" "),s("td",[t._v("等待其他线程做出一些特定操作，如通知或中断")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("time_waiting")])]),t._v(" "),s("td",[t._v("超时等待状态，它是可以在指定时间自行返回的")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("terminated")])]),t._v(" "),s("td",[t._v("终止状态，线程执行完毕")])])])]),t._v(" "),s("h2",{attrs:{id:"java中的锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java中的锁"}},[t._v("#")]),t._v(" Java中的锁")]),t._v(" "),s("h3",{attrs:{id:"lock接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock接口"}},[t._v("#")]),t._v(" Lock接口")]),t._v(" "),s("blockquote",[s("p",[t._v("定义了锁获取和释放的一系列操作，并能提供"),s("code",[t._v("synchronized")]),t._v("关键字不具备的特质")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("尝试非阻塞地获取锁")]),t._v("：当前线程尝试获取锁，如果这一时刻锁没有被其他线程获取到，则成功获取并持有锁。")]),t._v(" "),s("li",[s("strong",[t._v("能被中断地获取锁")]),t._v("：与"),s("code",[t._v("synchronized")]),t._v("不同，获取锁的线程能够响应中断，当获取到锁的线程被中断时，中断异常将会被抛出，同时锁会被释放。")]),t._v(" "),s("li",[s("strong",[t._v("超时获取锁🔐")]),t._v("：在指定的时间之前获取锁，如果截止时间到了仍旧无法获得锁，则返回。")])]),t._v(" "),s("h3",{attrs:{id:"队列同步器aqs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列同步器aqs"}},[t._v("#")]),t._v(" 队列同步器AQS")]),t._v(" "),s("p",[s("code",[t._v("AbstractQueuedSynchronizer")]),t._v("又被称为"),s("code",[t._v("AQS")]),t._v("。提供模板方法，其中"),s("code",[t._v("FailSync")]),t._v("和"),s("code",[t._v("nonFailSync")]),t._v("等都是基于AQS实现的。")]),t._v(" "),s("h3",{attrs:{id:"能够覆盖的模板方法。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#能够覆盖的模板方法。"}},[t._v("#")]),t._v(" 能够覆盖的模板方法。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomLock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractQueuedSynchronizer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryReleaseShared")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryReleaseShared")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHeldExclusively")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHeldExclusively")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"reentrantlock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock"}},[t._v("#")]),t._v(" "),s("code",[t._v("ReentrantLock")])]),t._v(" "),s("h4",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非公平锁")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 公平锁")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lock = new ReentrantLock(true);")]),t._v("\n    lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后释放锁")]),t._v("\n        lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("重入锁和"),s("code",[t._v("synchronized")]),t._v("关键字的区别")]),t._v(" "),s("ul",[s("li",[t._v("重入锁能够超时获取锁，并触发中断")]),t._v(" "),s("li",[t._v("重入锁判断的是"),s("code",[t._v("AQS")]),t._v("里的"),s("code",[t._v("state")]),t._v("字段，而"),s("code",[t._v("synchronized")]),t._v("判断的是对象头。两者都避免锁的获取不在用户态和内核态之间进行切换")]),t._v(" "),s("li",[s("code",[t._v("synchronized")]),t._v("是"),s("strong",[t._v("非公平锁")]),t._v("，如果要实现公平锁，只能使用"),s("code",[t._v("ReentrantLock")])]),t._v(" "),s("li",[s("code",[t._v("synchronized")]),t._v("关键字实现了偏向锁，自旋锁，性能上和"),s("code",[t._v("ReentrantLock")]),t._v("基本一样")]),t._v(" "),s("li",[s("code",[t._v("ReentrantLock")]),t._v("提供了"),s("code",[t._v("newCondition")]),t._v("方法，可以通过"),s("code",[t._v("Condition.await()")]),t._v("和"),s("code",[t._v("Condition.signal()")]),t._v("方法来阻塞唤醒指定的线程或是线程组")])]),t._v(" "),s("h4",{attrs:{id:"公平锁和非公平锁的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平锁和非公平锁的区别"}},[t._v("#")]),t._v(" 公平锁和非公平锁的区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("公平锁会在有新的线程进来的时候，首先判断下队列中是否有线程在等待，如果有，则加入队列")])]),t._v(" "),s("li",[s("p",[t._v("非公平锁会先尝试获取锁，如果获取失败，就加入队列。")])]),t._v(" "),s("li",[s("p",[t._v("性能上，公平锁的性能会比非公平锁低，因为公平锁会导致过多的线程切换，影响吞吐率。但是非公平锁可能会导致"),s("strong",[t._v("线程饥饿")]),t._v("的问题")])])]),t._v(" "),s("h3",{attrs:{id:"reentrantreadwritelock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reentrantreadwritelock"}},[t._v("#")]),t._v(" "),s("code",[t._v("ReentrantReadWriteLock")])]),t._v(" "),s("p",[s("code",[t._v("ReentrantLock")]),t._v("和"),s("code",[t._v("synchronized")]),t._v("关键字都是"),s("strong",[t._v("排他锁（独占锁）")]),t._v("，这些锁在同一时刻只允许一个线程访问，而读写锁（"),s("code",[t._v("ReentrantReadWriteLock")]),t._v("）可以允许多个线程访问。**读锁是共享锁，写锁是排他锁。读锁和写锁互斥。**在性能上"),s("code",[t._v("ReentrantReadWriteLock")]),t._v("比"),s("code",[t._v("ReentrantLock")]),t._v("好。")]),t._v(" "),s("p",[t._v("TODO")]),t._v(" "),s("h3",{attrs:{id:"stampedlock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stampedlock"}},[t._v("#")]),t._v(" "),s("code",[t._v("StampedLock")])]),t._v(" "),s("p",[s("code",[t._v("stamped")]),t._v("印有印章的印记，"),s("strong",[t._v("不是重入锁")]),t._v("🔒")]),t._v(" "),s("p",[s("code",[t._v("ReentrantReadWriteLock")]),t._v("使得多个读线程同时持有读锁（只要写锁未被占用），而写锁是独占的。")]),t._v(" "),s("p",[t._v("但是，读写锁如果使用不当，很容易产生“饥饿”问题：")]),t._v(" "),s("p",[t._v("比如在读线程非常多，写线程很少的情况下，很容易导致写线程“饥饿”，虽然使用“公平”策略可以一定程度上缓解这个问题，但是“公平”策略是以牺牲系统吞吐量为代价的。")]),t._v(" "),s("h4",{attrs:{id:"stampedlock的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stampedlock的特点"}},[t._v("#")]),t._v(" StampedLock的特点")]),t._v(" "),s("p",[s("code",[t._v("try")]),t._v("系列获取锁的函数，当获取锁失败后会返回为0的"),s("code",[t._v("stamp")]),t._v("值。当调用释放锁和转换锁的方法时候需要传入获取锁时候返回的"),s("code",[t._v("stamp")]),t._v("值。")]),t._v(" "),s("p",[s("code",[t._v("StampedLockd")]),t._v("的内部实现是基于"),s("code",[t._v("CLH")]),t._v("锁的，"),s("code",[t._v("CLH")]),t._v("锁原理：锁维护着一个等待线程队列，所有申请锁且失败的线程都记录在队列。一个节点代表一个线程，")]),t._v(" "),s("p",[t._v("保存着一个标记位"),s("code",[t._v("locked")]),t._v(",用以判断当前线程是否已经释放锁。当一个线程试图获取锁时，从队列尾节点作为前序节点，循环判断所有的前序节点是否已经成功释放锁。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1470988",target:"_blank",rel:"noopener noreferrer"}},[t._v("JDK8中新增的StampedLock"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"locksupport"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#locksupport"}},[t._v("#")]),t._v(" "),s("code",[t._v("LockSupport")])]),t._v(" "),s("p",[t._v("用于阻塞或唤醒线程")]),t._v(" "),s("p",[t._v("用法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 阻塞当前线程")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockSupport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("park")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 线程的功能，其中参数 blocker是用来标识当前线程在等待的对象，该对象主要用于问题排查和系统监控。")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockSupport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("park")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待的超时时间，单位毫秒")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockSupport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parkNanos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// deadline是绝对时间，毫秒")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockSupport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parkUntil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 唤醒线程")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockSupport")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unpark")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"condition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#condition"}},[t._v("#")]),t._v(" "),s("code",[t._v("Condition")])]),t._v(" "),s("p",[s("code",[t._v("Condition")]),t._v("是"),s("code",[t._v("Lock#newCondition")]),t._v("创建出来的")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" condition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("conditionWait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("conditionSignal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("TODO")]),t._v(" "),s("h2",{attrs:{id:"java并发容器和框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java并发容器和框架"}},[t._v("#")]),t._v(" Java并发容器和框架")]),t._v(" "),s("h3",{attrs:{id:"concurrenthashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap"}},[t._v("#")]),t._v(" "),s("code",[t._v("ConcurrentHashMap")])]),t._v(" "),s("p",[t._v("TODO")]),t._v(" "),s("h3",{attrs:{id:"java中的阻塞队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java中的阻塞队列"}},[t._v("#")]),t._v(" Java中的阻塞队列")]),t._v(" "),s("p",[t._v("阻塞队列是一个支持阻塞的插入和移除方法的队列：")]),t._v(" "),s("ul",[s("li",[t._v("支持阻塞的插入方法：当队列满时，阻塞插入元素的线程，直到队列中有元素被移除")]),t._v(" "),s("li",[t._v("支持阻塞的移除方法：当队列空时，获取队列元素的线程会一直等待，知道取得队列中的元素")])]),t._v(" "),s("h4",{attrs:{id:"arrayblockingqueue数组结构组成的有界阻塞队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arrayblockingqueue数组结构组成的有界阻塞队列"}},[t._v("#")]),t._v(" "),s("code",[t._v("ArrayBlockingQueue")]),t._v("数组结构组成的有界阻塞队列")]),t._v(" "),s("p",[t._v("按照FIFO的原则对元素进行排序。可以选择是否保证队列的公平性，访问者的公平性是基于可重入锁"),s("code",[t._v("ReentrantLock")]),t._v("实现的")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayBlockingQueue")]),t._v(" fairQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayBlockingQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"linkedblockingqueue链表实现的有界阻塞队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedblockingqueue链表实现的有界阻塞队列"}},[t._v("#")]),t._v(" "),s("code",[t._v("LinkedBlockingQueue")]),t._v("链表实现的有界阻塞队列")]),t._v(" "),s("p",[t._v("默认长度并且是最大长度为"),s("code",[t._v("Integer.MAX_VALUE")]),t._v("。"),s("strong",[t._v("FIFO")])]),t._v(" "),s("h4",{attrs:{id:"priorityblockingqueue支持优先级的无界阻塞队列-数组实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#priorityblockingqueue支持优先级的无界阻塞队列-数组实现"}},[t._v("#")]),t._v(" "),s("code",[t._v("PriorityBlockingQueue")]),t._v("支持优先级的无界阻塞队列，数组实现")]),t._v(" "),s("p",[t._v("默认情况下元素按照升序排序。也可以自定义类实现"),s("code",[t._v("compareTo()")]),t._v("方法来指定元素排序规则，或者在初始化"),s("code",[t._v("PriorityBlockingQueue")]),t._v("时，指定"),s("code",[t._v("Comparator")]),t._v("来对元素进行排序。")]),t._v(" "),s("h4",{attrs:{id:"delayqueue支持延时获取元素的无界阻塞队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delayqueue支持延时获取元素的无界阻塞队列"}},[t._v("#")]),t._v(" "),s("code",[t._v("DelayQueue")]),t._v("支持延时获取元素的无界阻塞队列")]),t._v(" "),s("p",[t._v("是"),s("code",[t._v("PriorityQueue")]),t._v("的子类")]),t._v(" "),s("h4",{attrs:{id:"synchronousqueue不存储元素的阻塞队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#synchronousqueue不存储元素的阻塞队列"}},[t._v("#")]),t._v(" "),s("code",[t._v("SynchronousQueue")]),t._v("不存储元素的阻塞队列")]),t._v(" "),s("p",[t._v("每一个"),s("code",[t._v("put")]),t._v("操作必须等待一个"),s("code",[t._v("take")]),t._v("操作，否则不能继续添加元素。可以把"),s("code",[t._v("SynchronousQueue")]),t._v("看成传球手，负责把生产者线程处理的数据直接给消费者线程。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SynchronousQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" fair"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    transferer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fair "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransferQueue")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransferStack")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"linkedtransferqueue链表实现的无界阻塞队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedtransferqueue链表实现的无界阻塞队列"}},[t._v("#")]),t._v(" "),s("code",[t._v("LinkedTransferQueue")]),t._v("链表实现的无界阻塞队列")]),t._v(" "),s("p",[t._v("相比于其他阻塞队列，"),s("code",[t._v("LinkedTransferQueue")]),t._v("多了"),s("code",[t._v("tryTransfer")]),t._v("和"),s("code",[t._v("transfer")]),t._v("方法。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("transfer")]),t._v("方法")]),t._v(" "),s("p",[t._v("如果当前有消费者正在等待接收元素（使用"),s("code",[t._v("take()")]),t._v("或"),s("code",[t._v("poll()")]),t._v("方法时），"),s("code",[t._v("transfer()")]),t._v("方法可以把生产者传入的元素立刻"),s("code",[t._v("transfer")]),t._v("给消费者。如果没有消费者在等待接收元素，"),s("code",[t._v("transfer")]),t._v("会将元素放在队列的"),s("code",[t._v("tail")]),t._v("节点，"),s("strong",[t._v("并等待被消费者消费了才返回")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("tryTransfer")]),t._v("方法")]),t._v(" "),s("p",[s("code",[t._v("tryTransfer")]),t._v("方法是用来试探生产者传入的元素是否能直接传给消费者。如果没有消费者等待接收元素，则返回"),s("code",[t._v("false")]),t._v("。和"),s("code",[t._v("transfer")]),t._v("方法的区别是"),s("code",[t._v("tryTransfer")]),t._v("方法无论消费者是否接收，方法立即返回，而"),s("code",[t._v("transfer")]),t._v("方法是必须等到消费者消费了才返回。")])])]),t._v(" "),s("h4",{attrs:{id:"linkedblockingdueue链表实现的双向阻塞队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedblockingdueue链表实现的双向阻塞队列"}},[t._v("#")]),t._v(" "),s("code",[t._v("LinkedBlockingDueue")]),t._v("链表实现的双向阻塞队列")]),t._v(" "),s("p",[s("code",[t._v("LinkedBlockingDeque")]),t._v("是一个由链表结构组成的双向阻塞队列。所谓双向队列指的是可以从队列的两端插入和移出元素。双向队列因为多了一个操作队列的入口，在多线程同时入队时，也就减少了一半的竞争。相比其他的阻塞队列，"),s("code",[t._v("LinkedBlockingDeque")]),t._v("多了"),s("code",[t._v("addFirst、addLast、offerFirst、offerLast、peekFirst")]),t._v("和"),s("code",[t._v("peekLast")]),t._v("等方法，以"),s("code",[t._v("First")]),t._v("单词结尾的方法，表示插入、获取（"),s("code",[t._v("peek")]),t._v("）或移除双端队列的第一个元素。以Last单词结尾的方法，表示插入、获取或移除双端队列的最后一个元素。另外，插入方法"),s("code",[t._v("add")]),t._v("等同于"),s("code",[t._v("addLast")]),t._v("，移除方法"),s("code",[t._v("remove")]),t._v("等效于"),s("code",[t._v("removeFirst")]),t._v("。但是"),s("code",[t._v("take")]),t._v("方法却等同于"),s("code",[t._v("takeFirst")]),t._v("，不知道是不是JDK的bug，使用时还是用带有First和"),s("code",[t._v("Last")]),t._v("后缀的方法更清楚。在初始化"),s("code",[t._v("LinkedBlockingDeque")]),t._v("时可以设置容量防止其过度膨胀。")]),t._v(" "),s("p",[t._v("另外，双向阻塞队列可以运用在“工作窃取”模式中。")]),t._v(" "),s("h4",{attrs:{id:"concurrentlinkendqueue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrentlinkendqueue"}},[t._v("#")]),t._v(" "),s("code",[t._v("ConcurrentLinkendQueue")])]),t._v(" "),s("p",[t._v("TODO")]),t._v(" "),s("h3",{attrs:{id:"fork-join框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fork-join框架"}},[t._v("#")]),t._v(" Fork/Join框架")]),t._v(" "),s("p",[s("code",[t._v("Fork/Join")]),t._v("框架是Java7提供的一个用于并行执行任务的框架，是一个把大任务分割成若干个小任务，最终汇总每个小任务结果后得到大任务结果的框架。")]),t._v(" "),s("Mermaid",{attrs:{id:"mermaid_64a54a24",graph:t.$dataBlock.mermaid_64a54a24}}),s("h4",{attrs:{id:"工作窃取算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作窃取算法"}},[t._v("#")]),t._v(" 工作窃取算法")]),t._v(" "),s("p",[t._v("双向队列，被窃取的任务线程永远从双向队列的头部拿任务执行，而窃取任务的线程永远从双向队列的尾部拿任务执行。")]),t._v(" "),s("h4",{attrs:{id:"使用-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-2"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AllArgsConstructor")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountTask")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RecursiveTask")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" threshold "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" threshold"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountTask")]),t._v(" t1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountTask")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountTask")]),t._v(" t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountTask")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ForkJoinPool")]),t._v(" forkJoinPool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ForkJoinPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ForkJoinTask")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" submit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" forkJoinPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountTask")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" submit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_13个原子操作类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13个原子操作类"}},[t._v("#")]),t._v(" 13个原子操作类")]),t._v(" "),s("h3",{attrs:{id:"基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型"}},[t._v("#")]),t._v(" 基本类型")]),t._v(" "),s("h4",{attrs:{id:"atomicboolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicboolean"}},[t._v("#")]),t._v(" AtomicBoolean")]),t._v(" "),s("h4",{attrs:{id:"atomicinteger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicinteger"}},[t._v("#")]),t._v(" AtomicInteger")]),t._v(" "),s("h4",{attrs:{id:"atomiclong"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomiclong"}},[t._v("#")]),t._v(" AtomicLong")]),t._v(" "),s("h3",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h4",{attrs:{id:"atomicintegerarray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicintegerarray"}},[t._v("#")]),t._v(" AtomicIntegerArray")]),t._v(" "),s("h4",{attrs:{id:"atomicreferencearray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicreferencearray"}},[t._v("#")]),t._v(" AtomicReferenceArray")]),t._v(" "),s("h4",{attrs:{id:"atomiclongarray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomiclongarray"}},[t._v("#")]),t._v(" AtomicLongArray")]),t._v(" "),s("h3",{attrs:{id:"引用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用类型"}},[t._v("#")]),t._v(" 引用类型")]),t._v(" "),s("h4",{attrs:{id:"atomicmarkablereference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicmarkablereference"}},[t._v("#")]),t._v(" AtomicMarkableReference")]),t._v(" "),s("h4",{attrs:{id:"atomicreference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicreference"}},[t._v("#")]),t._v(" AtomicReference")]),t._v(" "),s("h4",{attrs:{id:"atomicstampedreference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicstampedreference"}},[t._v("#")]),t._v(" AtomicStampedReference")]),t._v(" "),s("h3",{attrs:{id:"更新字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新字段"}},[t._v("#")]),t._v(" 更新字段")]),t._v(" "),s("h4",{attrs:{id:"atomiclongfieldupdater"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomiclongfieldupdater"}},[t._v("#")]),t._v(" AtomicLongFieldUpdater")]),t._v(" "),s("h4",{attrs:{id:"atomicintegerfieldupdater"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicintegerfieldupdater"}},[t._v("#")]),t._v(" AtomicIntegerFieldUpdater")]),t._v(" "),s("h4",{attrs:{id:"atomicreferencefieldupdater"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atomicreferencefieldupdater"}},[t._v("#")]),t._v(" AtomicReferenceFieldUpdater")]),t._v(" "),s("h2",{attrs:{id:"并发工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发工具类"}},[t._v("#")]),t._v(" 并发工具类")]),t._v(" "),s("h3",{attrs:{id:"等待多线程完成的countdownlatch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#等待多线程完成的countdownlatch"}},[t._v("#")]),t._v(" 等待多线程完成的"),s("code",[t._v("CountDownLatch")])]),t._v(" "),s("p",[s("code",[t._v("CountDownLatch")]),t._v("的构造函数接收一个"),s("code",[t._v("int")]),t._v("参数作为计数器，表示等待N个点完成。当调用"),s("code",[t._v("countDown")]),t._v("方法时，计数器就会减一。 这里的N个点，可以是N个线程，也可以是1个线程里的N个执行步骤。例如解析"),s("code",[t._v("Excel")]),t._v("的sheet。")]),t._v(" "),s("h4",{attrs:{id:"使用-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-3"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountDownLatchTester")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountDownLatch")]),t._v(" countDownLatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountDownLatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        countDownLatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("countDown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            countDownLatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("countDown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程内打印"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                countDownLatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("countDown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        countDownLatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"同步屏障cyclicbarrier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步屏障cyclicbarrier"}},[t._v("#")]),t._v(" 同步屏障"),s("code",[t._v("CyclicBarrier")])]),t._v(" "),s("p",[s("code",[t._v("CyclicBarrier")]),t._v("的字面意思是可循环使用（"),s("code",[t._v("Cyclic")]),t._v("）的屏障（"),s("code",[t._v("Barrier")]),t._v("）。主要作用是让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程（包括主线程）到达屏障时，屏障才会开门，所有被拦截的线程才会继续运行。")]),t._v(" "),s("p",[t._v("和"),s("code",[t._v("CountDownLatch")]),t._v("相比，"),s("code",[t._v("CyclicBarrier")]),t._v("可以被重复使用，还提供一些了解阻塞线程信息的方法。")]),t._v(" "),s("h4",{attrs:{id:"使用-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-4"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CyclicBarrierTester")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CyclicBarrier")]),t._v(" cyclicBarrier "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CyclicBarrier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sub thread"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                cyclicBarrier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sub thread were finished"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BrokenBarrierException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cyclicBarrier.reset();")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取阻塞的线程数量的方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cyclicBarrier.getNumberWaiting();")]),t._v("\n        cyclicBarrier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sub thread were finished"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"控制并发线程数semaphore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制并发线程数semaphore"}},[t._v("#")]),t._v(" 控制并发线程数"),s("code",[t._v("Semaphore")])]),t._v(" "),s("p",[s("code",[t._v("Semaphore")]),t._v("信号量。是用来控制同时访问特定资源的线程数量，它通过协调各个线程，以保证合理的使用公共资源。")]),t._v(" "),s("h3",{attrs:{id:"使用-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-5"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("p",[s("code",[t._v("Semaphore")]),t._v("可以用来做流量控制。加入有一个需求，要读取几万个文件的数据，因为都是IO密集型任务，我们可以启动几十个线程并发的去读取，但是如果读到内存后，还需要存储到数据库中，而数据库连接数只有10个，这时我们必须控制只有10个线程能够获取数据库链接来保存数据。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SemaphoreTester")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" THREAD_COUNT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" executorService "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFixedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("THREAD_COUNT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后只能有10个线程获取到数据库连接池")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Semaphore")]),t._v(" semaphore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Semaphore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" THREAD_COUNT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    semaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquire")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"模拟插入数据到数据库"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    semaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("release")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会等待所有线程执行完成才会关闭")]),t._v("\n        executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"线程间交换数据的exchanger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程间交换数据的exchanger"}},[t._v("#")]),t._v(" 线程间交换数据的"),s("code",[t._v("Exchanger")])]),t._v(" "),s("p",[s("code",[t._v("Exchanger")]),t._v("（交换者）是一个用于线程间协作，进行数据交换的工具类。它提供一个同步点，在这个同步点，两个线程可以交换彼此的数据。这两个线程通过"),s("code",[t._v("exchange")]),t._v("方法"),s("strong",[t._v("交换数据")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExchangerTester")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" executorService "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFixedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exchanger")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" exchanger "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exchanger")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exchanger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exchange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wdnmd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first thread: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exchanger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exchange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second thread: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会等待所有线程执行完成才会关闭")]),t._v("\n        executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// second thread: wdnmd")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// first thread: C")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"线程池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[t._v("#")]),t._v(" 线程池")]),t._v(" "),s("h3",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("corePoolSize")]),t._v(" – the number of threads to keep in the pool, even if they are idle, unless allowCoreThreadTimeOut is set")]),t._v(" "),s("li",[s("code",[t._v("maximumPoolSize")]),t._v(" – the maximum number of threads to allow in the pool")]),t._v(" "),s("li",[s("code",[t._v("keepAliveTime")]),t._v(" – 当线程数大于核心数时，多余的空闲线程在终止前等待新任务的最长时间。")]),t._v(" "),s("li",[s("code",[t._v("unit")]),t._v(" – the time unit for the keepAliveTime argument")]),t._v(" "),s("li",[s("code",[t._v("workQueue")]),t._v(" – the queue to use for holding tasks before they are executed. This queue will hold only the Runnable tasks submitted by the execute method.")]),t._v(" "),s("li",[s("code",[t._v("threadFactory")]),t._v(" – the factory to use when the executor creates a new thread，默认"),s("code",[t._v("DefaultThreadFactory")])]),t._v(" "),s("li",[s("code",[t._v("handler")]),t._v(" – the handler to use when execution is blocked because the thread bounds and queue capacities are reached， 默认是"),s("code",[t._v("AbortPolicy")])])]),t._v(" "),s("h3",{attrs:{id:"线程池的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池的好处"}},[t._v("#")]),t._v(" 线程池的好处")]),t._v(" "),s("ol",[s("li",[t._v("降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗")]),t._v(" "),s("li",[t._v("提高响应速度。当任务到达时，任务可以不需要等到创建线程就能立即执行")]),t._v(" "),s("li",[t._v("提高线程的可管理性。线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一分配、调优和监控")])]),t._v(" "),s("h3",{attrs:{id:"线程池的主要处理流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池的主要处理流程"}},[t._v("#")]),t._v(" 线程池的主要处理流程")]),t._v(" "),s("Mermaid",{attrs:{id:"mermaid_64a53bd2",graph:t.$dataBlock.mermaid_64a53bd2}}),s("h3",{attrs:{id:"线程池的状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池的状态"}},[t._v("#")]),t._v(" 线程池的状态")]),t._v(" "),s("p",[t._v("线程状态取的是变量"),s("code",[t._v("ctl")]),t._v("的最高三位，剩下的29位记录woker的数量")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("state")]),t._v(" "),s("th",[t._v("description")]),t._v(" "),s("th",[t._v("值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("RUNNING")]),t._v(" "),s("td",[t._v("接收新任务，并处理排队任务")]),t._v(" "),s("td",[t._v("111")])]),t._v(" "),s("tr",[s("td",[t._v("SHUTDOWN")]),t._v(" "),s("td",[t._v("不接收新任务，但处理排队任务")]),t._v(" "),s("td",[t._v("000")])]),t._v(" "),s("tr",[s("td",[t._v("STOP")]),t._v(" "),s("td",[t._v("不接收新任务，不处理排队任务，并中断正在进行的任务")]),t._v(" "),s("td",[t._v("001")])]),t._v(" "),s("tr",[s("td",[t._v("tidying")]),t._v(" "),s("td",[t._v("所有任务终止，workerCount=0，转换到tidying状态的任务将会执行terminate()的钩子方法")]),t._v(" "),s("td",[t._v("010")])]),t._v(" "),s("tr",[s("td",[t._v("terminated")]),t._v(" "),s("td",[t._v("terminated()方法已完成")]),t._v(" "),s("td",[t._v("011")])])])]),t._v(" "),s("ul",[s("li",[t._v("调用"),s("code",[t._v("shutdown")]),t._v("方法，"),s("code",[t._v("RUNNING")]),t._v("状态转为"),s("code",[t._v("SHUTDOWN")]),t._v("。当"),s("strong",[t._v("线程池和队列都为空")]),t._v("的时候，状态变为"),s("code",[t._v("TIDYING")])]),t._v(" "),s("li",[t._v("调用"),s("code",[t._v("shutdownNow")]),t._v("方法，"),s("code",[t._v("RUNNING")]),t._v("状态转为"),s("code",[t._v("STOP")]),t._v("。当"),s("strong",[t._v("线程池为空")]),t._v("时，状态变为"),s("code",[t._v("TIDYING")])]),t._v(" "),s("li",[t._v("当调用"),s("code",[t._v("terminate()")]),t._v("钩子方法完成后，awaitTerminate方法中的线程状态都变为"),s("code",[t._v("terminate")]),t._v("后。状态从"),s("code",[t._v("TIDYING")]),t._v("变为"),s("code",[t._v("terminated")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"线程池拒绝策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池拒绝策略"}},[t._v("#")]),t._v(" 线程池拒绝策略")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("AbortPolicy")]),t._v("：直接拒绝，并抛出一个运行时异常："),s("code",[t._v("RejectedExecutionException")])]),t._v(" "),s("li",[s("code",[t._v("DiscardPolicy")]),t._v("：拒绝加入的任务，但是是静默的，不抛出任何异常")]),t._v(" "),s("li",[s("code",[t._v("DiscardOldestPolicy")]),t._v("：忽略（丢弃）下一个要执行的任务，如果刚好有可用的线程，则立即提交执行。")]),t._v(" "),s("li",[s("code",[t._v("CallerRunsPolicy")]),t._v("：被拒绝任务的处理程序，它直接在execute方法的"),s("strong",[t._v("调用线程中运行")]),t._v("被拒绝的任务，除非执行程序已关闭，在这种情况下任务将被丢弃。")])]),t._v(" "),s("h3",{attrs:{id:"线程池10问10答"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池10问10答"}},[t._v("#")]),t._v(" 线程池10问10答")]),t._v(" "),s("ol",[s("li",[s("h4",{attrs:{id:"corepoolsize-0会怎么样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#corepoolsize-0会怎么样"}},[t._v("#")]),t._v(" corePoolSize=0会怎么样")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// execute(Runable command) 方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("workerCountOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" corePoolSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// workQueue.offer(command) 添加到队列，如果添加成功，返回false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRunning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" recheck "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个submit的runable，!isRunning会返回false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRunning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("recheck"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("workerCountOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("recheck"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果工作线程数量为0， 则直接添加一个非核心工作线程")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("因此可以知道下面这段代码其实也是会执行，并打印信息的。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkedBlockingQueue")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" objects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkedBlockingQueue")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadPoolExecutor")]),t._v(" threadPoolExecutor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadPoolExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" finalI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    threadPoolExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SneakyThrows")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("finalI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nthreadPoolExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("corePoolSize")]),t._v("和"),s("code",[t._v("maximumPoolSize")]),t._v("都设为0， 会抛出非法参数异常")])])])]),t._v(" "),s("li",[s("h4",{attrs:{id:"线程池创建的之后-会立即创建线程池吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池创建的之后-会立即创建线程池吗"}},[t._v("#")]),t._v(" 线程池创建的之后，会立即创建线程池吗")]),t._v(" "),s("p",[s("strong",[t._v("不会")]),t._v("。从上面的源码可以看出，创建完"),s("code",[t._v("ThreadPoolExecutor")]),t._v("之后，线程不会立即启动，而是要等到有任务提交的时候才会启动，除非调用了"),s("code",[t._v("prestartCoreThread")]),t._v("或者是"),s("code",[t._v("prestartAllCoreThreads")]),t._v("才会事先启动线程。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("prestartCoreThread")]),t._v("：只预启动一个核心线程，如果核心线程设为0，则不会预先启动任何线程")]),t._v(" "),s("li",[s("code",[t._v("prestartAllCoreThreads")]),t._v("：启动所有的核心线程，如果核心线程设为0，则不会预先启动任何线程")])])]),t._v(" "),s("li",[s("h4",{attrs:{id:"核心线程永远不会销毁吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心线程永远不会销毁吗"}},[t._v("#")]),t._v(" 核心线程永远不会销毁吗？")]),t._v(" "),s("p",[t._v("在JDK1.6之后，如果allowsCoreThreadTimeOut=true，核心线程也可以被终止。")])]),t._v(" "),s("li",[s("h4",{attrs:{id:"如何保证线程不被销毁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何保证线程不被销毁"}},[t._v("#")]),t._v(" 如何保证线程不被销毁")]),t._v(" "),s("p",[t._v("实现方式非常巧妙，核心线程（Worker）即使一直空闲也不终止，是通过workQueue.take()实现的，它会一直阻塞到从等待队列中取到新的任务。非核心线程空闲指定时间后终止是通过workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS)实现的，一个空闲的Worker只等待keepAliveTime，如果还没有取到任务则循环终止，线程也就运行结束了。")])]),t._v(" "),s("li",[s("h4",{attrs:{id:"空闲线程过多会有什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空闲线程过多会有什么问题"}},[t._v("#")]),t._v(" 空闲线程过多会有什么问题")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("线程池保持空闲的核心线程是它的默认配置，一般来讲是没有问题的，因为它占用的内存一般不大。怕的就是业务代码中使用ThreadLocal缓存的数据过大又不清理。")])]),t._v(" "),s("li",[s("p",[t._v("如果你的应用线程数处于高位，那么需要观察一下YoungGC的情况，估算一下Eden大小是否足够。如果不够的话，可能要谨慎地创建新线程，并且让空闲的线程终止；必要的时候，可能需要对JVM进行调参。")])])])]),t._v(" "),s("li",[s("h4",{attrs:{id:"keepalivetime-0会怎么样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keepalivetime-0会怎么样"}},[t._v("#")]),t._v(" keepAliveTime=0会怎么样")]),t._v(" "),s("p",[t._v("在JDK1.8中，keepAliveTime=0表示非核心线程执行完立刻终止。")]),t._v(" "),s("p",[t._v("默认情况下，keepAliveTime小于0，初始化的时候才会报错；但如果"),s("code",[t._v("allowsCoreThreadTimeOut")]),t._v("，"),s("code",[t._v("keepAliveTime")]),t._v("必须大于0，不然初始化报错。")])]),t._v(" "),s("li",[s("h4",{attrs:{id:"怎么进行异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么进行异常处理"}},[t._v("#")]),t._v(" 怎么进行异常处理")]),t._v(" "),s("ul",[s("li",[t._v("不论是用execute还是submit，都可以自己在业务代码上加try-catch进行异常处理。我一般喜欢使用这种方式，因为我喜欢对不同业务场景的异常进行差异化处理，至少打不一样的日志吧。")]),t._v(" "),s("li",[t._v("如果是execute，还可以自定义线程池，继承ThreadPoolExecutor并复写其afterExecute(Runnable r, Throwable t)方法。")]),t._v(" "),s("li",[t._v("或者实现"),s("code",[t._v("Thread.UncaughtExceptionHandler")]),t._v("接口，实现"),s("code",[t._v("void uncaughtException(Thread t, Throwable e);")]),t._v("方法，并将该handler传递给线程池的"),s("code",[t._v("ThreadFactory")]),t._v("。")]),t._v(" "),s("li",[t._v("但是注意，afterExecute和UncaughtExceptionHandler都不适用submit。因为通过上面的FutureTask.run()不难发现，它自己对Throwable进行了try-catch，封装到了outcome属性，所以底层方法execute的Worker是拿不到异常信息的。")])])]),t._v(" "),s("li",[s("h4",{attrs:{id:"如果是无界队列-线程数量会增加到最大线程数量吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果是无界队列-线程数量会增加到最大线程数量吗"}},[t._v("#")]),t._v(" 如果是无界队列，线程数量会增加到最大线程数量吗")]),t._v(" "),s("p",[t._v("答：不会")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("workerCountOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" corePoolSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在这里workQueue.offer(command)会一直返回空，没有执行下面的elseif中添加非核心worker的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRunning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" workQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" recheck "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRunning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("recheck"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("workerCountOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("recheck"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"executor框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executor框架"}},[t._v("#")]),t._v(" "),s("code",[t._v("Executor")]),t._v("框架")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HotSpot VM")]),t._v("的线程模型中，"),s("code",[t._v("Java")]),t._v("线程（"),s("code",[t._v("java.lang.Thread")]),t._v("）被一对一映射为本地操作系统线程。")]),t._v(" "),s("h3",{attrs:{id:"executor框架的结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executor框架的结构"}},[t._v("#")]),t._v(" "),s("code",[t._v("Executor")]),t._v("框架的结构")]),t._v(" "),s("p",[s("code",[t._v("Executor")]),t._v("框架主要由三大部分组成")]),t._v(" "),s("ul",[s("li",[t._v("任务。包括被执行任务需要实现的接口："),s("code",[t._v("Runnable")]),t._v("接口或"),s("code",[t._v("Callable")]),t._v("接口")]),t._v(" "),s("li",[t._v("任务的执行。包括任务执行机制的核心接口"),s("code",[t._v("Executor")]),t._v("，以及继承自"),s("code",[t._v("Executor")]),t._v("的"),s("code",[t._v("ExecutorService")]),t._v("接口。"),s("code",[t._v("Executor")]),t._v("有两个关键类实现了"),s("code",[t._v("ExecutorService")]),t._v("接口（"),s("code",[t._v("ThreadPoolExecutor")]),t._v("和"),s("code",[t._v("ScheduledTreadPoolExecutor")]),t._v("）。")]),t._v(" "),s("li",[t._v("异步计算的结果。包括接口"),s("code",[t._v("Future")]),t._v("和实现类"),s("code",[t._v("FutureTask")])])]),t._v(" "),s("p",[t._v("相关类和接口简介")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("TheadPoolExecutor")]),t._v("是线程池的核心实现类，用来执行被提交的任务。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ScheduledThreadPoolExecutor")]),t._v("，可以在给定的延迟后运行命令，或定期执行命令。比Timer更灵活，且功能强大。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Callable")]),t._v("和"),s("code",[t._v("Runnable")]),t._v("的不同在于，"),s("code",[t._v("Callable")]),t._v("可以返回数据给主线程。而"),s("code",[t._v("Runnable")]),t._v("只能返回给定的结果。所有提交的"),s("code",[t._v("Runnable")]),t._v("接口的实现，最后在创建"),s("code",[t._v("FutureTask")]),t._v("的时候，都会被转为"),s("code",[t._v("Callable")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Future")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Callable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ExecutorService中对于submit callable任务的定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Future")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"scheduledthreadpoolexecutor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheduledthreadpoolexecutor"}},[t._v("#")]),t._v(" "),s("code",[t._v("ScheduledThreadPoolExecutor")])]),t._v(" "),s("h4",{attrs:{id:"相对于threadpoolexecutor的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相对于threadpoolexecutor的区别"}},[t._v("#")]),t._v(" 相对于"),s("code",[t._v("ThreadPoolExecutor")]),t._v("的区别")]),t._v(" "),s("ol",[s("li",[t._v("使用"),s("code",[t._v("DelayQueue")]),t._v("作为任务队列")]),t._v(" "),s("li",[t._v("获取任务的方式不同")]),t._v(" "),s("li",[t._v("执行周期任务后，增加了额外操作")])]),t._v(" "),s("h4",{attrs:{id:"实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),s("p",[s("code",[t._v("ScheduledThreadPoolExecutor")]),t._v("会把待调度的"),s("code",[t._v("ScheduledFurtureTask")]),t._v("放到一个"),s("code",[t._v("DelayQueue")]),t._v("中。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScheduledFutureTask")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FutureTask")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunnableScheduledFuture")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加到队列中的序号")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" sequenceNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个任务将要执行的具体时间")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示任务执行的间隔")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" period"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("DelayQueue")]),t._v("继承了"),s("code",[t._v("PriorityQueue")]),t._v("，")]),t._v(" "),s("blockquote",[s("p",[t._v("排序规则，order by time asc，order by sequenceNumber asc")])]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("DelayQueue")]),t._v("的"),s("code",[t._v("take()")]),t._v("和"),s("code",[t._v("add()")]),t._v("都要加锁。")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("task")])])]),t._v(" "),s("ol",[s("li",[t._v("获取"),s("code",[t._v("Lock")])]),t._v(" "),s("li",[t._v("获取周期任务\n"),s("ul",[s("li",[t._v("如果队列为空，当前线程到"),s("code",[t._v("Condition")]),t._v("中"),s("code",[t._v("await")]),t._v("。否则执行下一条判断")]),t._v(" "),s("li",[t._v("如果头元素的"),s("code",[t._v("time")]),t._v("比当前时间大，到"),s("code",[t._v("Condition")]),t._v("中"),s("code",[t._v("await")]),t._v("。否则执行下一条")]),t._v(" "),s("li",[t._v("获取所有"),s("code",[t._v("time")]),t._v("小于等于当前时间的"),s("code",[t._v("FurtureTask")]),t._v("，唤醒"),s("code",[t._v("Condition")]),t._v("中等待的线程，并交付"),s("code",[t._v("FutureTask")]),t._v("执行。")])])]),t._v(" "),s("li",[t._v("释放"),s("code",[t._v("Lock")])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("add")])])]),t._v(" "),s("ol",[s("li",[t._v("获取"),s("code",[t._v("Lock")])]),t._v(" "),s("li",[t._v("添加任务，如果任务满足执行条件，则唤醒"),s("code",[t._v("Condition")]),t._v("中等待的线程，交付执行。")]),t._v(" "),s("li",[t._v("释放"),s("code",[t._v("Lock")])])]),t._v(" "),s("h3",{attrs:{id:"futuretask"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#futuretask"}},[t._v("#")]),t._v(" "),s("code",[t._v("FutureTask")])]),t._v(" "),s("p",[s("code",[t._v("FutureTask")]),t._v("除了实现"),s("code",[t._v("Future")]),t._v("接口外，还实现了接口"),s("code",[t._v("Runnable")]),t._v("。因此"),s("code",[t._v("FutureTask")]),t._v("可以交给"),s("code",[t._v("Executor")]),t._v("执行，也可以由调用线程直接执行（强转后调用"),s("code",[t._v("FutureTask.run()")]),t._v("）。")]),t._v(" "),s("p",[s("code",[t._v("FutureTask")]),t._v("有三种状态")]),t._v(" "),s("ol",[s("li",[t._v("未启动，"),s("code",[t._v("FutureTask.run()")]),t._v("未执行之前。")]),t._v(" "),s("li",[t._v("已启动，"),s("code",[t._v("FutureTask.run()")]),t._v("的执行过程中。")]),t._v(" "),s("li",[t._v("已完成，可以是正常结束，也可以是取消"),s("code",[t._v("Future.cancel(boolean mayInterruptIfRunning)")]),t._v("，也可以是因为抛出异常而结束。")])]),t._v(" "),s("blockquote",[s("p",[t._v("当"),s("code",[t._v("Future")]),t._v("处于未启动或已启动状态时，执行"),s("code",[t._v("Future.get()")]),t._v("方法将会导致调用线程阻塞；当"),s("code",[t._v("Future")]),t._v("处于已完成状态时，执行"),s("code",[t._v("Future.get()")]),t._v("方法将会导致调用线程立即返回结果或抛出异常。")])]),t._v(" "),s("h2",{attrs:{id:"实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[t._v("#")]),t._v(" 实战")]),t._v(" "),s("h3",{attrs:{id:"线上问题定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线上问题定位"}},[t._v("#")]),t._v(" 线上问题定位")]),t._v(" "),s("h3",{attrs:{id:"性能测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能测试"}},[t._v("#")]),t._v(" 性能测试")])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);a.default=r.exports}}]);