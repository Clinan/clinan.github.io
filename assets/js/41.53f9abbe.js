(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{445:function(t,v,_){"use strict";_.r(v);var a=_(10),e=function(t){t.options.__data__block__={mermaid_64a560e0:"sequenceDiagram\nClient->>Server: SYN,Seq=ISN(c)\nServer->>Client: SYN+ACK,Seq=ISN(s),ACK=ISN(c)+1\nClient->>Server: ACK,Seq=ISN(c)+1, ACK=ISN(s)\nnote over Client, Server: ESTABLISHED，连通状态\n\n\n",mermaid_64a560ae:"sequenceDiagram\nNote over Client,Server: ESTABLISHED，连通状态\nClient->>Server: FIN,ACK, Seq=K,ACK=L\nnote over Client: FIN_WAIT_1\nnote over Server: ESTABLISHED\nServer->>Client: ACK,Seq=L,ACK=K+1\nNote over Server: CLOSE_WAIT\nnote over Client: FIN_WAIT_2\nServer->>Client: FIN,ACK,Seq=L,ACK=K+1\nNote over Server: LAST_ACK\nClient->>Server: ACK,Seq=K+1,ACK=L+1\nNote over Client:  TIME_WAIT，并开始一个2MSL的计时器\nNote over Client,Server:  CLOSED\n\n",mermaid_64a55fe6:"sequenceDiagram\nnote over Client,Server: 为什么是2MSL\nServer->>Client:FIN+ACK,Seq=K,ACK=L\nnote over Server: 等待确认关闭的ACK\nClient--\x3e>Server: ACK,Seq=L,ACK=K+1(server没有收到，至少在超时之前没收到)\nnote over Client: 发出后，经历了MSL时间，Server就开始重传\nnote over Server: 超时重传FIN,直到收到LastACK\nnote over Client: 又经历了MSL时间，收到Server的重传\nServer->>Client: FIN+ACK,Seq=K,ACK=L(超时后再发送)\nnote over Client: 再次发送一个LastACK，再次计时到2MSL\nnote over Client,Server: 在发出LastACK之后，到至少Server的重传FIN到达client，至少是2MSL\n",mermaid_64a5599c:"sequenceDiagram\nClient->>Server: SYN, Seq=ISN(c)\nServer-xClient: ACK+RST,Seq=0,ACK=ISN(c)+1\nnote right of Client: 这个过程会被重试几次\n"}},r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"计算机网络"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),_("h2",{attrs:{id:"分层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分层"}},[t._v("#")]),t._v(" 分层")]),t._v(" "),_("ol",[_("li",[t._v("应用层：处理特定的应用程序细节")]),t._v(" "),_("li",[t._v("传输层：为两台主机上的应用程序提供端到端的通讯")]),t._v(" "),_("li",[t._v("网络层：处理分组在网络中的活动，例如分组选路")]),t._v(" "),_("li",[t._v("链路层：处理与电缆（或其他让任何传输媒介）的物理接口细节")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("OSI")]),t._v(" "),_("th",[t._v("TCP/IP")]),t._v(" "),_("th",[t._v("对应概念")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("应用层")]),t._v(" "),_("td",[t._v("应用层")]),t._v(" "),_("td",[t._v("HTTP,FTP,SMTP")])]),t._v(" "),_("tr",[_("td",[t._v("表示层")]),t._v(" "),_("td",[t._v("应用层")]),t._v(" "),_("td",[t._v("telnet, Gopher")])]),t._v(" "),_("tr",[_("td",[t._v("会话层")]),t._v(" "),_("td",[t._v("应用层")]),t._v(" "),_("td",[t._v("SMTP,DNS")])]),t._v(" "),_("tr",[_("td",[t._v("传输层")]),t._v(" "),_("td",[t._v("传输层")]),t._v(" "),_("td",[t._v("TCP, UDP")])]),t._v(" "),_("tr",[_("td",[t._v("网络层")]),t._v(" "),_("td",[t._v("网络层")]),t._v(" "),_("td",[t._v("IP, ARP,RARP,ICMP")])]),t._v(" "),_("tr",[_("td",[t._v("链路层")]),t._v(" "),_("td",[t._v("链路层")]),t._v(" "),_("td",[t._v("FDDI, Ethernet, Arpanet, PDN, SLIP, PPP")])]),t._v(" "),_("tr",[_("td",[t._v("物理层")]),t._v(" "),_("td",[t._v("链路层")]),t._v(" "),_("td",[t._v("IEEE 802.1A, IEEE 802.2到IEEE 802.11")])])])]),t._v(" "),_("ul",[_("li",[t._v("ICMP 协议")]),t._v(" "),_("li",[t._v("ping是一个应用程序，调用了ICMP协议")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/net.png",alt:""}})]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/fenceng.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"可靠的tcp-不可靠的udp-不可靠的ip"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#可靠的tcp-不可靠的udp-不可靠的ip"}},[t._v("#")]),t._v(" 可靠的TCP 不可靠的UDP 不可靠的IP")]),t._v(" "),_("ol",[_("li",[t._v("可靠的TCP通过不可靠的IP传输数据")]),t._v(" "),_("li",[t._v("不可靠的UDP通过不可靠的IP传输数据")])]),t._v(" "),_("h2",{attrs:{id:"单工-半双工-全双工"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单工-半双工-全双工"}},[t._v("#")]),t._v(" 单工 半双工 全双工")]),t._v(" "),_("ul",[_("li",[t._v("单工，传输和接收要建立两个连接会话，且是不同的端口号")]),t._v(" "),_("li",[t._v("半双工，传输和接收只需要建立一个会话（长连接），但是不能同时发送和接收。\n"),_("ul",[_("li",[_("strong",[t._v("http1.1")]),t._v("：建立长连接，多路复用，可先后发送多个http请求，不用等待回复，但是回复得按顺序一个一个回复")])])]),t._v(" "),_("li",[t._v("全双工，传输和接收只需要建立一个会话，能同时发送和接收\n"),_("ul",[_("li",[_("strong",[t._v("http2.0")]),t._v("： 一个消息发送后不用等待接受,第二个消息可以直接发送")]),t._v(" "),_("li",[t._v("socket：不可靠")])])])]),t._v(" "),_("h2",{attrs:{id:"封装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[t._v("#")]),t._v(" 封装")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/data-packet.png",alt:""}}),t._v(" "),_("img",{attrs:{src:"https://cdn.clinan.xyz/demultiplexing.png",alt:""}})]),t._v(" "),_("ul",[_("li",[t._v("以太网数据帧的物理特性是其长度必须在46~1500字节之间")]),t._v(" "),_("li",[t._v("以太网的帧首部也有一个16bit的帧类型域（IP,ARP,RARP）")]),t._v(" "),_("li",[t._v("IP在首部中存入一个长度为8bit的数值，称为协议域（ICMP,IGMP,TCP,UDP,ESP,GRE）")]),t._v(" "),_("li",[t._v("TCP和UDP都用一个16bit的端口号表示不同的应用程序（FTP, telnet, http）（所以端口的范围是0~2^16-1，其中1~1023是保留端口号）")])]),t._v(" "),_("h2",{attrs:{id:"以太网"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#以太网"}},[t._v("#")]),t._v(" 以太网")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/ethernet.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"环回接口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#环回接口"}},[t._v("#")]),t._v(" 环回接口")]),t._v(" "),_("p",[t._v("127.0.0.1环回地址")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/loopback.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"mtu-最大传输单元"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mtu-最大传输单元"}},[t._v("#")]),t._v(" "),_("code",[t._v("MTU")]),t._v(" 最大传输单元")]),t._v(" "),_("p",[t._v("链路层网络中（例如以太网）中，携带高层协议的大小是有限制的。以太网有效负荷的字节数通常被限制为1500，"),_("code",[t._v("PPP")]),t._v("通常也采用相同大小以保持与以太网兼容。链路层的这种性质被称为"),_("strong",[t._v("最大传输单元"),_("code",[t._v("MTU")])])]),t._v(" "),_("h2",{attrs:{id:"ip"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[t._v("#")]),t._v(" IP")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/IP-protocol.png",alt:""}})]),t._v(" "),_("ul",[_("li",[t._v("版本号 4bit")]),t._v(" "),_("li",[t._v("首部长度4bit, 最大值为15，每增加1，则首部长度增加4bit, 所以IPv4最多支持15*4=60bit的头部长度")])]),t._v(" "),_("h2",{attrs:{id:"arp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#arp"}},[t._v("#")]),t._v(" ARP")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/ARP.png",alt:""}})]),t._v(" "),_("ul",[_("li",[t._v("路由表")])]),t._v(" "),_("h2",{attrs:{id:"tcp头部"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp头部"}},[t._v("#")]),t._v(" TCP头部")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.clinan.xyz/tcp.png",alt:""}})]),t._v(" "),_("ul",[_("li",[_("p",[t._v("32位序号，"),_("code",[t._v("SYN")]),t._v("，"),_("code",[t._v("FIN")]),t._v("都会消耗序号，"),_("code",[t._v("ACK")]),t._v("不占用序号，因为"),_("code",[t._v("ACK")]),t._v("也是首部的一部分，一旦一个连接建立，"),_("code",[t._v("ACK")]),t._v("总是被设置为1")])]),t._v(" "),_("li",[_("p",[t._v("TCP提供一直面向连接的，可靠的字节流服务")])]),t._v(" "),_("li",[_("p",[t._v("在一个TCP连接中，仅有两方进行彼此通信。")])]),t._v(" "),_("li",[_("p",[t._v("能够提供流量控制（窗口大小）")])]),t._v(" "),_("li",[_("p",[t._v("一个IP和一个端口也称为插口（"),_("code",[t._v("socket")]),t._v("），后来它也表示伯克利版的编程接口。")])]),t._v(" "),_("li",[_("p",[t._v("若ACK=N，则表明：到序号N-1为止的所有数据都已正确收到")])]),t._v(" "),_("li",[_("p",[t._v("接收机器缓存有限，窗口字段明确指出了现在允许对方发送的数据量，窗口值是经常在动态变化着的")])]),t._v(" "),_("li",[_("p",[t._v("检验和，检验和数据检验的范围包括首部和数据这两部分")])])]),t._v(" "),_("table",{staticStyle:{"text-align":"center"}},[_("tr",[_("th",{attrs:{colspan:"32"}},[t._v("TCP头部，最长60字节，当前一行32bit  ")])]),t._v(" "),_("tr",[_("td",{attrs:{colspan:"16"}},[t._v("源（source）端口号0-65535  ")]),t._v(" "),_("td",{attrs:{colspan:"16"}},[t._v("目标（target）端口号0-65535  ")])]),t._v(" "),_("tr",[_("td",{attrs:{colspan:"32"}},[t._v("序列号(Sequence Number)")])]),t._v(" "),_("tr",[_("td",{attrs:{colspan:"32"}},[t._v("ACK(acknowlegde) sequence number确认序列号")])]),t._v(" "),_("tr",[_("td",{attrs:{colspan:"4"}},[t._v("头部长度4bit")]),t._v(" "),_("td",{attrs:{colspan:"4"}},[t._v("4bit保留")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("CWR")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("ECE")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("URG")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("ACK")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("PSH")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("RST")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("SYN")]),t._v(" "),_("td",{attrs:{colspan:"1"}},[t._v("FIN")]),t._v(" "),_("td",{attrs:{colspan:"16"}},[t._v("窗口大小 16bit，可以通过选项加大")])]),t._v(" "),_("tr",[_("td",{attrs:{colspan:"16"}},[t._v("校验和 ")]),t._v(" "),_("td",{attrs:{colspan:"16"}},[t._v("紧急指针 ")])]),t._v(" "),_("tr",[_("td",{attrs:{colspan:"32"}},[t._v("选项")])])]),t._v(" "),_("h3",{attrs:{id:"psh标志位"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#psh标志位"}},[t._v("#")]),t._v(" PSH标志位")]),t._v(" "),_("p",[t._v("在传输大数据的时候，在TCP中会分块传输。如果遇到设置了PSH位的数据段，则将当前数据段中的数据和缓存中的数据都提交给应用层，并清空缓存。而不用继续等待或判断后续是否还有数据传输过来。")]),t._v(" "),_("h3",{attrs:{id:"选项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),_("p",[_("code",[t._v("MSS")]),t._v("（maximum segment size）：最大报文段")]),t._v(" "),_("p",[t._v("SACK： 选择"),_("code",[t._v("ACK")])]),t._v(" "),_("p",[_("code",[t._v("Scale_Window")]),t._v("(SW)：窗口缩放支持")]),t._v(" "),_("h2",{attrs:{id:"tcp连接与关闭"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp连接与关闭"}},[t._v("#")]),t._v(" TCP连接与关闭")]),t._v(" "),_("h3",{attrs:{id:"连接-三次握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接-三次握手"}},[t._v("#")]),t._v(" 连接 三次握手")]),t._v(" "),_("Mermaid",{attrs:{id:"mermaid_64a560e0",graph:t.$dataBlock.mermaid_64a560e0}}),_("h3",{attrs:{id:"关闭-四次握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关闭-四次握手"}},[t._v("#")]),t._v(" 关闭 四次握手")]),t._v(" "),_("Mermaid",{attrs:{id:"mermaid_64a560ae",graph:t.$dataBlock.mermaid_64a560ae}}),_("p",[t._v("一些说明")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("FIN_WAIT_1")]),t._v("，"),_("code",[t._v("FIN_WAIT_2")]),t._v("，"),_("code",[t._v("TIME_WAIT")]),t._v("也被称为主动关闭。表示当本地应用程序发起一个关闭请求时会进入的状态集合。")]),t._v(" "),_("li",[_("code",[t._v("CLOSE_WAIT")]),t._v("，"),_("code",[t._v("LAST_ACK")]),t._v("被称为被动关闭。这些状态与等待一个FIN报文段并进行关闭相关。")])]),t._v(" "),_("h3",{attrs:{id:"半关闭"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#半关闭"}},[t._v("#")]),t._v(" 半关闭")]),t._v(" "),_("p",[t._v("当客户端发送了FIN之后，处于"),_("code",[t._v("FIN_WAIT_1")]),t._v("，"),_("code",[t._v("FIN_WAIT_2")]),t._v("的状态都是半关闭状态。")]),t._v(" "),_("h3",{attrs:{id:"time-wait"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#time-wait"}},[t._v("#")]),t._v(" TIME_WAIT")]),t._v(" "),_("p",[t._v("TIME_WAIT是客户端发完确认关闭"),_("code",[t._v("ACK")]),t._v("之后，为避免还停留在网络中的数据段的影响，等待两倍的最大段生存时间（maximum segment Lifetime，"),_("code",[t._v("MSL")]),t._v("）。")]),t._v(" "),_("p",[t._v("在"),_("code",[t._v("Linux")]),t._v("下可以通过"),_("code",[t._v("cat /etc/sysctl.conf")]),t._v("，查看"),_("code",[t._v("net.ipv4.tcp_fin_timeout")]),t._v(" 默认是60，单位为秒")]),t._v(" "),_("p",[_("strong",[t._v("为什么是两倍的段最大生存时间（"),_("code",[t._v("2MSL")]),t._v("）？")])]),t._v(" "),_("p",[t._v("因为被关闭方可能会超时重传FIN，直到收到最终"),_("code",[t._v("ACK")]),t._v("。但是下一刻就收到主动关闭方的"),_("code",[t._v("ACK")]),t._v("，从发出"),_("code",[t._v("LastACK")]),t._v("的发出到接收到重传的FIN。客户端最多可以经历"),_("code",[t._v("2MSL")]),t._v("的时间。")]),t._v(" "),_("Mermaid",{attrs:{id:"mermaid_64a55fe6",graph:t.$dataBlock.mermaid_64a55fe6}}),_("p",[_("strong",[t._v("重点")])]),t._v(" "),_("p",[t._v("另外一个影响"),_("code",[t._v("2MSL")]),t._v("的因素是当TCP处于"),_("code",[t._v("TIME_WAIT")]),t._v("状态时，通信双方将该连接（"),_("code",[t._v("client ip+port, server ip+port")]),t._v("）标志为不可重新使用。只有"),_("code",[t._v("2MSL")]),t._v("结束之后，才能被重新使用。")]),t._v(" "),_("p",[t._v("在TCP头部中，是没有记录"),_("code",[t._v("IP")]),t._v("的，所以在主动关闭方来说，目标端口固定的情况下，自身随机端口，是有可能用完65535个端口的。")]),t._v(" "),_("h4",{attrs:{id:"解决方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),_("p",[t._v("在Linux中调整"),_("code",[t._v("MSL")]),t._v("的时间为"),_("code",[t._v("30s")]),t._v("，"),_("code",[t._v("Http")]),t._v("使用"),_("code",[t._v("Http1.1")]),t._v("，使用"),_("code",[t._v("KeepAlive")]),t._v("，TCP采用保活机制。")]),t._v(" "),_("h3",{attrs:{id:"close-wait"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#close-wait"}},[t._v("#")]),t._v(" CLOSE_WAIT")]),t._v(" "),_("p",[t._v("如果使用"),_("code",[t._v("HttpClient")]),t._v("不关闭"),_("code",[t._v("InputStream")]),t._v("，也会导致占用，而且情况比"),_("code",[t._v("TIME_WAIT")]),t._v("更严重，因为它不会释放TCP连接。如果没有配置"),_("code",[t._v("TCP")]),t._v("保活机制，则服务器会一直处于"),_("code",[t._v("CLOSE_WAIT")]),t._v("状态。")]),t._v(" "),_("h4",{attrs:{id:"解决方案-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-2"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),_("p",[t._v("查看代码，关注"),_("code",[t._v("HttpClient")]),t._v("的使用，"),_("a",{attrs:{href:"https://blog.csdn.net/shootyou/article/details/6615051",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关博客"),_("OutboundLink")],1)]),t._v(" "),_("h3",{attrs:{id:"close-wait和time-wait查看"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#close-wait和time-wait查看"}},[t._v("#")]),t._v(" CLOSE_WAIT和TIME_WAIT查看")]),t._v(" "),_("p",[_("code",[t._v("netstat -n | awk *'/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'*")])]),t._v(" "),_("h3",{attrs:{id:"静默时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#静默时间"}},[t._v("#")]),t._v(" 静默时间")]),t._v(" "),_("p",[t._v("在三次握手之前，静默一个"),_("code",[t._v("MSL")]),t._v("。现在一般操作系统都不会再实现了。")]),t._v(" "),_("h3",{attrs:{id:"重置报文段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重置报文段"}},[t._v("#")]),t._v(" 重置报文段")]),t._v(" "),_("h4",{attrs:{id:"对不存在的端口进行连接请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对不存在的端口进行连接请求"}},[t._v("#")]),t._v(" 对不存在的端口进行连接请求")]),t._v(" "),_("p",[t._v("服务器会返回"),_("code",[t._v("ACK+RST, ACK=ISN(c)+1,Seq=0")]),t._v("的消息。这个过程会有重试")]),t._v(" "),_("Mermaid",{attrs:{id:"mermaid_64a5599c",graph:t.$dataBlock.mermaid_64a5599c}}),_("h4",{attrs:{id:"终止一条连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#终止一条连接"}},[t._v("#")]),t._v(" 终止一条连接")]),t._v(" "),_("p",[t._v("正常客户端发送"),_("code",[t._v("FIN")]),t._v("是一个正常的关闭连接的方法。也被成为"),_("strong",[t._v("有序释放")])]),t._v(" "),_("p",[t._v("此外，也可以通过发送"),_("strong",[t._v("重置报文")]),t._v("替代FIN来终止一条连接，也称为"),_("strong",[t._v("终止释放")])]),t._v(" "),_("h2",{attrs:{id:"超时与重传"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#超时与重传"}},[t._v("#")]),t._v(" 超时与重传")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("每次重传间隔时间加倍称为 "),_("strong",[t._v("二进制指数退避")])])]),t._v(" "),_("li",[_("p",[t._v("TCP拥有两个阈值来决定如何重传同一个报文段。")]),t._v(" "),_("ul",[_("li",[t._v("R1表示TCP向IP层传递“消极建议”前，愿意尝试重传的次数")]),t._v(" "),_("li",[t._v("R2（大于R1）指示TCP放弃当前连接的时机。")]),t._v(" "),_("li",[t._v("R1和R2应分别设为3次重传和100秒")]),t._v(" "),_("li",[t._v("Linux中"),_("code",[t._v("R1=net.ipv4.tcp_retries1")]),t._v("默认值为3次，"),_("code",[t._v("R2=net.ipv4.tcp_retries2")]),t._v("默认值为15次，约为13~30分钟")]),t._v(" "),_("li",[t._v("对于SYN报文\n"),_("ul",[_("li",[_("code",[t._v("net.ipv4.tcp_syn_retries")]),t._v("和"),_("code",[t._v("net.ipv4.tcp_synack_retries")]),t._v("限定重传次数，默认值为5，约180s")])])])])])]),t._v(" "),_("h3",{attrs:{id:"设置重传超时时间rto"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设置重传超时时间rto"}},[t._v("#")]),t._v(" 设置重传超时时间RTO")]),t._v(" "),_("p",[t._v("通过对"),_("code",[t._v("RTT")]),t._v("测量采样计算"),_("code",[t._v("RTO")]),t._v("。")]),t._v(" "),_("p",[t._v("这部分太难了，一般都不会问。")]),t._v(" "),_("h3",{attrs:{id:"基于的计时器的重传"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基于的计时器的重传"}},[t._v("#")]),t._v(" 基于的计时器的重传")]),t._v(" "),_("p",[t._v("在重传第一次后，没有收到确认，需要等待更久的时间再发送第二次重传，称为"),_("strong",[t._v("退避值")])]),t._v(" "),_("p",[t._v("当一报文出现多次重传时，"),_("code",[t._v("RTO")]),t._v("值（暂时地）乘上"),_("code",[t._v("γ")]),t._v("来形成新的退避值")]),t._v(" "),_("section",[_("eqn",[_("span",{staticClass:"katex-display"},[_("span",{staticClass:"katex"},[_("span",{staticClass:"katex-mathml"},[_("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[_("semantics",[_("mrow",[_("mi",[t._v("R")]),_("mi",[t._v("T")]),_("mi",[t._v("O")]),_("mo",[t._v("=")]),_("mi",[t._v("γ")]),_("mi",[t._v("R")]),_("mi",[t._v("T")]),_("mi",[t._v("O")])],1),_("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\nRTO=γRTO\n")])],1)],1)],1),_("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[_("span",{staticClass:"base"},[_("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),_("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.00773em"}},[t._v("R")]),_("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),_("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),_("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),_("span",{staticClass:"mrel"},[t._v("=")]),_("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),_("span",{staticClass:"base"},[_("span",{staticClass:"strut",staticStyle:{height:"0.8777699999999999em","vertical-align":"-0.19444em"}}),_("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05556em"}},[t._v("γ")]),_("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.00773em"}},[t._v("R")]),_("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),_("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")])])])])])])],1),_("p",[t._v("通常情况下，"),_("code",[t._v("γ")]),t._v("=1，随着多次重传，"),_("code",[t._v("γ")]),t._v("加倍指数增长。通常情况下不能超过最大退避因子。（"),_("code",[t._v("Linux")]),t._v("确保"),_("code",[t._v("RTO")]),t._v("设置不能超过"),_("code",[t._v("TCP_RTO_MAX")]),t._v("，默认值为120s），一旦收到对于的"),_("code",[t._v("ACK")]),t._v("，"),_("code",[t._v("γ")]),t._v("重置为1")]),t._v(" "),_("h3",{attrs:{id:"快速重传"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#快速重传"}},[t._v("#")]),t._v(" 快速重传")]),t._v(" "),_("p",[t._v("基于接收端的反馈信息来引发重传，而非重传计时器的超时。")]),t._v(" "),_("p",[t._v("具体描述如下：")]),t._v(" "),_("p",[t._v("TCP发送端在观测到至少"),_("code",[t._v("dupthresh")]),t._v("(称为重复"),_("code",[t._v("ACK")]),t._v("阈值)个重复"),_("code",[t._v("ACK")]),t._v("后，就重传可能丢失的数据，而不必等到重传计时器超时。")]),t._v(" "),_("p",[t._v("可以使用SACK进行快速重传")]),t._v(" "),_("h3",{attrs:{id:"带选择确认的重传sack"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#带选择确认的重传sack"}},[t._v("#")]),t._v(" 带选择确认的重传SACK")]),t._v(" "),_("ul",[_("li",[_("strong",[_("code",[t._v("SACK")]),t._v("和普通的"),_("code",[t._v("ACK")]),t._v("有时会丢失，并且其中不包含数据（SYN或FIN也不被置位）就不会被重传。")])])]),t._v(" "),_("h4",{attrs:{id:"数据接收端行为"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据接收端行为"}},[t._v("#")]),t._v(" 数据接收端行为")]),t._v(" "),_("p",[t._v("接收端在TCP连接建立期间，收到"),_("code",[t._v("SACK")]),t._v("许可选项即可生成"),_("code",[t._v("SACK")]),t._v("。通常来说，当缓存中存在失序数据时，接收端就可生成"),_("code",[t._v("SACK")]),t._v(".")]),t._v(" "),_("p",[t._v("第一个"),_("code",[t._v("SACK")]),t._v("块内包含的是最近接收到的报文段的序列号范围。其余"),_("code",[t._v("SACK")]),t._v("块包含的内容也按照接收的先后依次排序。")]),t._v(" "),_("p",[t._v("最新的要发送的块，除了包含数据内容外，还会有最新的"),_("code",[t._v("SACK")]),t._v("的块，也"),_("strong",[t._v("重复")]),t._v("之前的"),_("code",[t._v("SACK")]),t._v("块。所以一个"),_("code",[t._v("SACK")]),t._v("选项会包含多个"),_("code",[t._v("SACK")]),t._v("块。"),_("strong",[t._v("目的是为防止"),_("code",[t._v("SACK")]),t._v("丢失提供一些备份")]),t._v("（因为上面说了"),_("code",[t._v("SACK")]),t._v("和"),_("code",[t._v("ACK")]),t._v("不会重传，丢了就丢了）")]),t._v(" "),_("h4",{attrs:{id:"数据发送端行为"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据发送端行为"}},[t._v("#")]),t._v(" 数据发送端行为")]),t._v(" "),_("p",[t._v("当数据发送端执行重传时，通常是由于其收到了"),_("code",[t._v("SACK")]),t._v("或重复"),_("code",[t._v("ACK")]),t._v("，它可以选择重新发送新数据或重传旧数据。"),_("code",[t._v("SACK")]),t._v("提供的接收端序列号范围，因此发送端可根据此推断需要重传的空缺数据。")]),t._v(" "),_("p",[t._v("由于快速重传机制，所以需要观测"),_("code",[t._v("dupthresh")]),t._v("个"),_("code",[t._v("SACK")]),t._v("之后，才会进行重传。")]),t._v(" "),_("h2",{attrs:{id:"数据流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据流"}},[t._v("#")]),t._v(" 数据流")]),t._v(" "),_("h3",{attrs:{id:"延时确认-delayed-ack"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#延时确认-delayed-ack"}},[t._v("#")]),t._v(" 延时确认（"),_("code",[t._v("delayed-ACK")]),t._v("）")]),t._v(" "),_("p",[t._v("延时ACK针对的是接收端")]),t._v(" "),_("p",[t._v("TCP并不对每个到来的数据包都返回ACK，利用TCP的累积ACK字段就能实现该功能。累积确认可以允许延迟一段时间发送ACK，以便将ACK和向相同方向上需要传的数据结合发送。这种传输方式经常用于批量数据传输。")]),t._v(" "),_("p",[t._v("作用：会减少ACK传输条目，可以一定程度减轻网络负载。")]),t._v(" "),_("p",[t._v("对于批量数据传输通常为2：1的比例。"),_("code",[t._v("Linux")]),t._v("使用一种动态调节算法，可以在每个报文段返回一个ACK与传统延时ACK模式间相互切换。")]),t._v(" "),_("blockquote",[_("p",[t._v("有论文指出，TCP实现ACK延迟的时延应小于500ms。实践中时延最大取"),_("strong",[t._v("200ms")])])]),t._v(" "),_("h3",{attrs:{id:"nagle算法-俗称粘包"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nagle算法-俗称粘包"}},[t._v("#")]),t._v(" "),_("code",[t._v("Nagle")]),t._v("算法（俗称粘包）")]),t._v(" "),_("p",[_("code",[t._v("Nagle")]),t._v("算法针对数据发送端。")]),t._v(" "),_("p",[t._v("当一个TCP连接中有在传数据（即那些已发送但还未经确认的数据），小的报文段（长度小于"),_("code",[t._v("SMSS")]),t._v(", Sender maximum segment size,  发送方最大段大小）就不能被发送，直到所有在传的数据都收到ACK。"),_("strong",[t._v("并且在收到ACK后，TCP需要收集这些小数据，将其整合到一个报文段中发送。")])]),t._v(" "),_("p",[t._v("在"),_("code",[t._v("Nagle")]),t._v("算法超时后，也会直接发送小的数据包")]),t._v(" "),_("p",[t._v("作用：可以减少发送方包的数目，疯狂发送小的数据包。同时也会减少接收方的ACK。")]),t._v(" "),_("p",[t._v("缺点：增大了传输时延。会导致传输不及时。")]),t._v(" "),_("h3",{attrs:{id:"延时ack-nagle算法的结合使用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#延时ack-nagle算法的结合使用"}},[t._v("#")]),t._v(" 延时ACK+Nagle算法的结合使用")]),t._v(" "),_("p",[t._v("会导致逻辑意义上的死锁，但是延时"),_("code",[t._v("ACK")]),t._v("和"),_("code",[t._v("Nagle")]),t._v("算法都实现了超时机制。不会发生真正的死锁。")]),t._v(" "),_("p",[t._v("但是会导致网络有了更大的延迟。")]),t._v(" "),_("h2",{attrs:{id:"流量控制和窗口滑动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#流量控制和窗口滑动"}},[t._v("#")]),t._v(" 流量控制和窗口滑动")]),t._v(" "),_("p",[t._v("流量控制因为当数据发送方的发送速率超过接收方的处理速度。会导致很多没有必要的重传，导致网络拥塞。")]),t._v(" "),_("p",[t._v("窗口滑动是流量控制的一种方案。")]),t._v(" "),_("p",[t._v("TCP头部中的窗口大小最大为65535，"),_("strong",[t._v("单位为字节，而不是段")]),t._v("。"),_("strong",[t._v("此外MSS的单位也是字节")])]),t._v(" "),_("h3",{attrs:{id:"tcp的窗口控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp的窗口控制"}},[t._v("#")]),t._v(" TCP的窗口控制")]),t._v(" "),_("h4",{attrs:{id:"发送窗口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#发送窗口"}},[t._v("#")]),t._v(" 发送窗口")]),t._v(" "),_("table",[_("tr",[_("td",{attrs:{align:"center",colspan:"3"}}),t._v(" "),_("td",{attrs:{align:"center",colspan:"5"}},[t._v("提供窗口（SND.WND）")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"3"}})]),t._v(" "),_("tr",[_("td",{attrs:{align:"center",colspan:"1"}},[t._v("...")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("5")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("6")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("7")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("8")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("9")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("10")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("11")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("12")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("13")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("...")])]),t._v(" "),_("tr",[_("td",{attrs:{align:"center",colspan:"3"}},[t._v("已发送并已确认")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"3"}},[t._v("已发送但未确认")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"2"}},[t._v("即将发送（可用窗口）")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"3"}},[t._v("直到窗口移动前都不能发送")])]),t._v(" "),_("tr",[_("td",{attrs:{align:"center",colspan:"2"}}),t._v(" "),_("td",{attrs:{align:"center",colspan:"2"}},[t._v("左边界（SND.UNA）")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}}),t._v(" "),_("td",{attrs:{align:"center",colspan:"2"}},[t._v("SND.NXT")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"2"}},[t._v("右边界（SND.UNA+SND.WND）")]),t._v(" "),_("td",{attrs:{colspan:"2"}})])]),t._v(" "),_("h4",{attrs:{id:"接收窗口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接收窗口"}},[t._v("#")]),t._v(" 接收窗口")]),t._v(" "),_("table",[_("tr",[_("td",{attrs:{align:"center",colspan:"3"}}),t._v(" "),_("td",{attrs:{align:"center",colspan:"5"}},[t._v("接收窗口（REV.WND）")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"3"}})]),t._v(" "),_("tr",[_("td",{attrs:{align:"center",colspan:"1"}},[t._v("...")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("5")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("6")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("7")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("8")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("9")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("10")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("11")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("12")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("13")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"1"}},[t._v("...")])]),t._v(" "),_("tr",[_("td",{attrs:{align:"center",colspan:"3"}},[t._v("已接收并确认")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"5"}},[t._v("接收后将会保存")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"3"}},[t._v("不能接收")])]),t._v(" "),_("tr",[_("td",{attrs:{align:"center",colspan:"2"}}),t._v(" "),_("td",{attrs:{align:"center",colspan:"2"}},[t._v("左边界（REV.NXT）")]),t._v(" "),_("td",{attrs:{align:"center",colspan:"3"}}),t._v(" "),_("td",{attrs:{align:"center",colspan:"2"}},[t._v("右边界（REV.NXT+REV.WND）")]),t._v(" "),_("td",{attrs:{colspan:"2"}})])]),t._v("\n传统的TCP的累积ACK结构，只有当到达数据序列号等于左边界时，数据才不会被丢失，窗口才能向前滑动。\n"),_("p",[t._v("对于选择确认ACK，使用"),_("code",[t._v("SACK")]),t._v("选项，窗口内的报文段也可以被接收确认，但只有在接收到等于左边界的序列号数据时，窗口才能前移。")]),t._v(" "),_("h4",{attrs:{id:"零窗口与tcp持续计时器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#零窗口与tcp持续计时器"}},[t._v("#")]),t._v(" 零窗口与TCP持续计时器")]),t._v(" "),_("p",[t._v("当窗口值为0时，可以有效阻止发送端继续发送，直到窗口大小恢复为非零值。当接收端重新获得可用窗口时，会给发送端传输一个"),_("strong",[t._v("窗口更新")]),t._v("（window update），告知其可继续发送数据。这样的窗口更新都不包含数据（所以也不会超时重传），不能保证可靠性。")]),t._v(" "),_("p",[t._v("如果"),_("code",[t._v("window update")]),t._v("的"),_("code",[t._v("ACK")]),t._v("丢失，通信双方会一直处于等待状态。")]),t._v(" "),_("p",[_("strong",[t._v("解决方案：")])]),t._v(" "),_("p",[t._v("发送端会采用一个"),_("strong",[t._v("持续计时器")]),t._v("间歇性地查询接收端，看其窗口是否已增长。具体的，持续计时器会触发"),_("strong",[t._v("窗口探测")]),t._v("（window probe）的传输，强烈要求接收端返回"),_("code",[t._v("ACK")]),t._v("（其中包含窗口大小字段）。")]),t._v(" "),_("p",[_("code",[t._v("window prove")]),t._v("包含一个字节的数据，这样可以超时重传。因此可以避免窗口丢失的死锁。")]),t._v(" "),_("h2",{attrs:{id:"拥塞控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#拥塞控制"}},[t._v("#")]),t._v(" 拥塞控制")]),t._v(" "),_("p",[t._v("拥塞控制在网络中有很大的作用，当所有主机都以自己最大的能力持续的发送数据段，在网络环境很差的情况下，数据段又一直不能被接收方接收到（发送方收不到"),_("code",[t._v("ACK")]),t._v("），发送方就会超时重传。如果一直接收不到ACK就会一直超时重传，最终会导致阻塞在网络中的数据越来越多。最后将整个网络通信堵塞。")]),t._v(" "),_("p",[t._v("但是另一方面又想最大限度的使用网络，然而网络通信的复杂性导致无法了解这个最大限度的值，并且这个值是动态的，每次网络波动之后，都需要重新去寻找这个阈值，所以只能一点点的逼近，一旦超过，就立即返回之前的数据发送大小。")]),t._v(" "),_("h3",{attrs:{id:"减缓tcp发送"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#减缓tcp发送"}},[t._v("#")]),t._v(" 减缓TCP发送")]),t._v(" "),_("p",[t._v("可用窗口"),_("code",[t._v("W=min(cwnd, awnd)")]),t._v("，"),_("code",[t._v("cwnd")]),t._v("为拥塞端口大小，"),_("code",[t._v("awnd")]),t._v("为接收方窗口大小。一般来说，计算机发送和接收端都不能精确的计算"),_("code",[t._v("cwnd")]),t._v("的值。并且这个值是在动态变化的。")]),t._v(" "),_("h3",{attrs:{id:"慢启动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#慢启动"}},[t._v("#")]),t._v(" 慢启动")]),t._v(" "),_("p",[t._v("在传输初始的时候，由于网络传输能力未知。需要缓慢探测可用传输资源，防止短时间内大量数据注入导致拥塞。")]),t._v(" "),_("h4",{attrs:{id:"场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),_("ul",[_("li",[t._v("创建新的TCP连接时")]),t._v(" "),_("li",[t._v("检测到由重传超时（"),_("code",[t._v("RTO")]),t._v("）导致的丢包时，需要执行慢启动。")]),t._v(" "),_("li",[t._v("TCP发送端长时间空闲状态也可能调用慢启动算法。")])]),t._v(" "),_("h4",{attrs:{id:"目的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[t._v("#")]),t._v(" 目的")]),t._v(" "),_("p",[t._v("在用拥塞避免的方法探寻更多可用带宽接近的"),_("code",[t._v("cwnd")]),t._v("值，以帮助TCP建立"),_("code",[t._v("ACK")]),t._v("时钟。")]),t._v(" "),_("h4",{attrs:{id:"创建连接时的慢启动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建连接时的慢启动"}},[t._v("#")]),t._v(" 创建连接时的慢启动")]),t._v(" "),_("p",[t._v("在创建新连接时执行慢启动，直至有丢包时，执行拥塞避免算法（下一小节）进入稳定状态。")]),t._v(" "),_("p",[t._v("具体的：")]),t._v(" "),_("ol",[_("li",[t._v("TCP以发送一定数量的数据段开始慢启动（SYN交换之后），成为"),_("strong",[t._v("初始窗口（"),_("code",[t._v("IW")]),t._v("）")]),t._v("，"),_("code",[t._v("IW")]),t._v("的初始值设为1"),_("code",[t._v("SMSS")]),t._v("（发送方的最大段大小）。")]),t._v(" "),_("li",[t._v("在接收到一个数据段的"),_("code",[t._v("ACK")]),t._v("之后，通常"),_("code",[t._v("cwnd")]),t._v("会增加到2，接着发送2个数据段。")]),t._v(" "),_("li",[t._v("如果对应的接收到新的"),_("code",[t._v("ACK")]),t._v("，"),_("code",[t._v("cwnd")]),t._v("会由2变成4、然后到8。呈"),_("strong",[t._v("指数")]),t._v("级上升。")]),t._v(" "),_("li",[t._v("呈指数上升之后，"),_("code",[t._v("cwnd")]),t._v("会非常大，一旦发生丢包，"),_("code",[t._v("cwnd")]),t._v("将立即减为原来的一半，即上一次没有发生丢包的"),_("code",[t._v("cwnd")]),t._v("。"),_("strong",[t._v("这就是慢启动转为拥塞避免阶段的转折点")]),t._v("。此时的"),_("code",[t._v("cwnd")]),t._v("也就是慢启动的"),_("strong",[t._v("阈值")]),t._v("（"),_("code",[t._v("ssthresh")]),t._v("）")])]),t._v(" "),_("h3",{attrs:{id:"拥塞避免"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#拥塞避免"}},[t._v("#")]),t._v(" 拥塞避免")]),t._v(" "),_("p",[t._v("在通过慢启动确认慢启动阈值之后，"),_("code",[t._v("cwnd")]),t._v("的增长将会转为"),_("strong",[t._v("线性增长")]),t._v("。可以逐步尽可能的使用更多的网络资源。也避免大量的数据堵塞整个传输网络。")]),t._v(" "),_("p",[t._v("其中如果要是开启了延时"),_("code",[t._v("ACK")]),t._v("，则增长速率会比正常的线性增长还要慢一些。")]),t._v(" "),_("h3",{attrs:{id:"快速恢复"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#快速恢复"}},[t._v("#")]),t._v(" 快速恢复")]),t._v(" "),_("p",[t._v("BSD Tahoe版本的TCP，在检测到丢包之后，无论是超时还是快速重传，都会重新开始进入慢启动状态。在有丢包的情况发生时，"),_("code",[t._v("Tahoe")]),t._v("简单地将"),_("code",[t._v("cwnd")]),t._v("减为初始值（"),_("code",[t._v("1SMSS")]),t._v("），以达到慢启动的目的。直到找到新的阈值"),_("code",[t._v("ssthresh")])]),t._v(" "),_("p",[t._v("导致宽带利用率低下。")]),t._v(" "),_("p",[t._v("在BSD Reno版中，在遇到因为快速重传（发送方收到重复的"),_("code",[t._v("ACK")]),t._v("）时，"),_("code",[t._v("cwnd")]),t._v("被设置为上一个"),_("code",[t._v("ssthresh")]),t._v("。而无需重新慢启动。但是在大多数的TCP版本中，超时导致的慢启动问题还是存在。")]),t._v(" "),_("h3",{attrs:{id:"newreno"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#newreno"}},[t._v("#")]),t._v(" "),_("code",[t._v("NewReno")])]),t._v(" "),_("p",[t._v("快速恢复带来了一个新的问题，当一个传输窗口中出现多个数据包丢失时，一旦其中一个包重传成功，发送方就会接收到一个成功的 "),_("code",[t._v("ACK")]),t._v("，这样快速恢复中"),_("code",[t._v("cwnd")]),t._v("窗口的暂时膨胀就会停止，而事实上丢失的其他数据包未完成重传。导致出现这种情况的"),_("code",[t._v("ACK")]),t._v("成为局部"),_("code",[t._v("ACK")]),t._v("（"),_("code",[t._v("partial ACK")]),t._v("）。Reno算法在接收到局部"),_("code",[t._v("ACK")]),t._v("后就停止拥塞窗口膨胀阶段，并将其减小到特定值。这会严重的浪费网络性能。")]),t._v(" "),_("p",[_("code",[t._v("NewReno")]),t._v("算法提出，记录上一个数据传输窗口的最高序列号，仅当接收到序列号不小于恢复点的"),_("code",[t._v("ACK")]),t._v("才停止快速恢复阶段。这样TCP发送方每接收一个"),_("code",[t._v("ACK")]),t._v("后就能继续发送一个新数据段，从而减少重传超时的发生。")]),t._v(" "),_("h2",{attrs:{id:"保活机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#保活机制"}},[t._v("#")]),t._v(" 保活机制")]),t._v(" "),_("p",[t._v("三个变量")]),t._v(" "),_("ol",[_("li",[t._v("保活时间："),_("code",[t._v("net.ipv4tcp_keepalive_time")]),t._v("= 7200s (2h)")]),t._v(" "),_("li",[t._v("保活时间间隔："),_("code",[t._v("net.ipv4.tcp_keepalive_intvl")]),t._v("= 75s")]),t._v(" "),_("li",[t._v("保活探测次数："),_("code",[t._v("net.ipv4.tcp_keepalive_probes")]),t._v("= 9")])]),t._v(" "),_("h1",{attrs:{id:"http"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),_("h2",{attrs:{id:"方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),_("h3",{attrs:{id:"put"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[t._v("#")]),t._v(" PUT")]),t._v(" "),_("p",[t._v("目的是让服务器用请求的主体部分来创建一个由请求的URL命名的新文档。如果那个URL已经存在的话，就用这个主体替代。")]),t._v(" "),_("div",{staticClass:"language-http extra-class"},[_("pre",{pre:!0,attrs:{class:"language-http"}},[_("code",[t._v("PUT /files/images/upload.png\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Host:")]),t._v(" www.xxx.com\n\n... 文件流\n")])])]),_("h3",{attrs:{id:"head"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" HEAD")]),t._v(" "),_("p",[t._v("不返回数据，只返回头部。这就允许在不获取实际数据的情况下，了解数据的情况，并且也可以对返回体头部进行校验")]),t._v(" "),_("p",[t._v("作用如下：")]),t._v(" "),_("ul",[_("li",[t._v("在不获取资源的情况下了解资源")]),t._v(" "),_("li",[t._v("通过查看状态码，了解某个对象是否存在")]),t._v(" "),_("li",[t._v("通过查看首部，测试资源是否被修改")])]),t._v(" "),_("h3",{attrs:{id:"post"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#post"}},[t._v("#")]),t._v(" POST")]),t._v(" "),_("p",[t._v("通常是表单的传输")]),t._v(" "),_("h3",{attrs:{id:"trace"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#trace"}},[t._v("#")]),t._v(" TRACE")]),t._v(" "),_("p",[t._v("客户端发出一个请求后，可能会经过防火墙，代理，网关或一些其他应用程序。")]),t._v(" "),_("p",[t._v("每个中间节点都有可能修改原始的HTTP请求。TRACE方法允许客户端在最终将请求发给服务器时，看看它变成了什么样子。")]),t._v(" "),_("p",[t._v("TRACE会在目的服务器发起一个环回诊断，最后的服务器会弹回一条TRACE相应，并在响应主体中携带它收到的原始请求报文。")]),t._v(" "),_("h3",{attrs:{id:"options"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" OPTIONS")]),t._v(" "),_("p",[t._v("请求Web服务器告知其支持的各种功能。如跨域。也包含各种支持的方法")]),t._v(" "),_("div",{staticClass:"language-http extra-class"},[_("pre",{pre:!0,attrs:{class:"language-http"}},[_("code",[_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("access-control-allow-origin:")]),t._v("\t*\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("allow:")]),t._v("\tGET,HEAD,POST,PUT,PATCH,DELETE,OPTIONS\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("cache-control:")]),t._v("\tno-cache, no-store, max-age=0, must-revalidate\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("date:")]),t._v("\tThu, 06 May 2021 03:11:11 GMT\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("expires:")]),t._v("\t0\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("pragma:")]),t._v("\tno-cache\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("x-content-type-options:")]),t._v("\tnosniff\n"),_("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("x-xss-protection:")]),t._v("\t1; mode=block\n\n\n")])])]),_("h2",{attrs:{id:"header"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[t._v("#")]),t._v(" Header")]),t._v(" "),_("h3",{attrs:{id:"connection-keep-alive"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#connection-keep-alive"}},[t._v("#")]),t._v(" Connection: keep-alive")]),t._v(" "),_("p",[t._v("复用TCP连接，使用客户端到服务器的连接持续有效。当客户端对服务器有后续请求时，Keep-alive能够避免重建连接。")]),t._v(" "),_("h3",{attrs:{id:"重定向"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[t._v("#")]),t._v(" 重定向")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("301是永久重定向。")])]),t._v(" "),_("li",[_("p",[t._v("302是临时重定向。")])]),t._v(" "),_("li",[_("p",[t._v("共同点：301和302状态码都表示重定向，就是说浏览器在拿到服务器返回的这个状态码后会自动跳转到一个新的URL地址，这个地址可以从响应的Location首部中获取（用户看到的效果就是他输入的地址A瞬间变成了另一个地址B）。")])]),t._v(" "),_("li",[_("p",[t._v("不同点。")]),t._v(" "),_("ul",[_("li",[t._v("301表示旧地址A的资源已经被永久地移除了（这个资源不可访问了），搜索引擎在抓取新内容的同时也将旧的网址交换为重定向之后的网址；")]),t._v(" "),_("li",[t._v("302表示旧地址A的资源还在（仍然可以访问），这个重定向只是临时地从旧地址A跳转到地址B，搜索引擎会抓取新的内容而保存旧的网址。")])])])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);v.default=r.exports}}]);